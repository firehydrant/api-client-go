// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IncidentTypeEntityTemplateImpactEntity incident type entity template impact entity
//
// swagger:model IncidentTypeEntity_TemplateImpactEntity
type IncidentTypeEntityTemplateImpactEntity struct {

	// condition id
	ConditionID string `json:"condition_id,omitempty"`

	// condition name
	ConditionName string `json:"condition_name,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// type
	// Enum: [customer environment functionality service]
	Type string `json:"type,omitempty"`
}

// Validate validates this incident type entity template impact entity
func (m *IncidentTypeEntityTemplateImpactEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var incidentTypeEntityTemplateImpactEntityTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["customer","environment","functionality","service"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		incidentTypeEntityTemplateImpactEntityTypeTypePropEnum = append(incidentTypeEntityTemplateImpactEntityTypeTypePropEnum, v)
	}
}

const (

	// IncidentTypeEntityTemplateImpactEntityTypeCustomer captures enum value "customer"
	IncidentTypeEntityTemplateImpactEntityTypeCustomer string = "customer"

	// IncidentTypeEntityTemplateImpactEntityTypeEnvironment captures enum value "environment"
	IncidentTypeEntityTemplateImpactEntityTypeEnvironment string = "environment"

	// IncidentTypeEntityTemplateImpactEntityTypeFunctionality captures enum value "functionality"
	IncidentTypeEntityTemplateImpactEntityTypeFunctionality string = "functionality"

	// IncidentTypeEntityTemplateImpactEntityTypeService captures enum value "service"
	IncidentTypeEntityTemplateImpactEntityTypeService string = "service"
)

// prop value enum
func (m *IncidentTypeEntityTemplateImpactEntity) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, incidentTypeEntityTemplateImpactEntityTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IncidentTypeEntityTemplateImpactEntity) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this incident type entity template impact entity based on context it is used
func (m *IncidentTypeEntityTemplateImpactEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IncidentTypeEntityTemplateImpactEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IncidentTypeEntityTemplateImpactEntity) UnmarshalBinary(b []byte) error {
	var res IncidentTypeEntityTemplateImpactEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
