// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateServiceDependency Creates a service dependency relationship between two services
//
// swagger:model create_service_dependency
type CreateServiceDependency struct {

	// connected service id
	// Required: true
	ConnectedServiceID *string `json:"connected_service_id"`

	// A note to describe the service dependency relationship
	Notes string `json:"notes,omitempty"`

	// service id
	// Required: true
	ServiceID *string `json:"service_id"`
}

// Validate validates this create service dependency
func (m *CreateServiceDependency) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConnectedServiceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateServiceDependency) validateConnectedServiceID(formats strfmt.Registry) error {

	if err := validate.Required("connected_service_id", "body", m.ConnectedServiceID); err != nil {
		return err
	}

	return nil
}

func (m *CreateServiceDependency) validateServiceID(formats strfmt.Registry) error {

	if err := validate.Required("service_id", "body", m.ServiceID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create service dependency based on context it is used
func (m *CreateServiceDependency) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateServiceDependency) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateServiceDependency) UnmarshalBinary(b []byte) error {
	var res CreateServiceDependency
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
