// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PatchV1NuncConnectionsNuncConnectionIDLinksLinkID Update a link to be displayed on a FireHydrant status page
//
// swagger:model patchV1NuncConnectionsNuncConnectionIdLinksLinkId
type PatchV1NuncConnectionsNuncConnectionIDLinksLinkID struct {

	// display text
	DisplayText string `json:"display_text,omitempty"`

	// href url
	HrefURL string `json:"href_url,omitempty"`

	// icon url
	IconURL string `json:"icon_url,omitempty"`
}

// Validate validates this patch v1 nunc connections nunc connection Id links link Id
func (m *PatchV1NuncConnectionsNuncConnectionIDLinksLinkID) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this patch v1 nunc connections nunc connection Id links link Id based on context it is used
func (m *PatchV1NuncConnectionsNuncConnectionIDLinksLinkID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PatchV1NuncConnectionsNuncConnectionIDLinksLinkID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchV1NuncConnectionsNuncConnectionIDLinksLinkID) UnmarshalBinary(b []byte) error {
	var res PatchV1NuncConnectionsNuncConnectionIDLinksLinkID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
