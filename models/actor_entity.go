// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActorEntity actor entity
//
// swagger:model ActorEntity
type ActorEntity struct {

	// email
	Email string `json:"email,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// type
	// Enum: [firehydrant_user firehydrant_bot alertmanager aws bugsnag checkly custom_alerts data_export datadog shortcut new_relic nunc github giphy google_meet microsoft_teams webex jira_cloud jira_onprem opsgenie pager_duty honeycomb patchy service_now slack statuspage victorops zendesk zoom confluence_cloud google_docs zoom_v2]
	Type string `json:"type,omitempty"`
}

// Validate validates this actor entity
func (m *ActorEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var actorEntityTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["firehydrant_user","firehydrant_bot","alertmanager","aws","bugsnag","checkly","custom_alerts","data_export","datadog","shortcut","new_relic","nunc","github","giphy","google_meet","microsoft_teams","webex","jira_cloud","jira_onprem","opsgenie","pager_duty","honeycomb","patchy","service_now","slack","statuspage","victorops","zendesk","zoom","confluence_cloud","google_docs","zoom_v2"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		actorEntityTypeTypePropEnum = append(actorEntityTypeTypePropEnum, v)
	}
}

const (

	// ActorEntityTypeFirehydrantUser captures enum value "firehydrant_user"
	ActorEntityTypeFirehydrantUser string = "firehydrant_user"

	// ActorEntityTypeFirehydrantBot captures enum value "firehydrant_bot"
	ActorEntityTypeFirehydrantBot string = "firehydrant_bot"

	// ActorEntityTypeAlertmanager captures enum value "alertmanager"
	ActorEntityTypeAlertmanager string = "alertmanager"

	// ActorEntityTypeAws captures enum value "aws"
	ActorEntityTypeAws string = "aws"

	// ActorEntityTypeBugsnag captures enum value "bugsnag"
	ActorEntityTypeBugsnag string = "bugsnag"

	// ActorEntityTypeCheckly captures enum value "checkly"
	ActorEntityTypeCheckly string = "checkly"

	// ActorEntityTypeCustomAlerts captures enum value "custom_alerts"
	ActorEntityTypeCustomAlerts string = "custom_alerts"

	// ActorEntityTypeDataExport captures enum value "data_export"
	ActorEntityTypeDataExport string = "data_export"

	// ActorEntityTypeDatadog captures enum value "datadog"
	ActorEntityTypeDatadog string = "datadog"

	// ActorEntityTypeShortcut captures enum value "shortcut"
	ActorEntityTypeShortcut string = "shortcut"

	// ActorEntityTypeNewRelic captures enum value "new_relic"
	ActorEntityTypeNewRelic string = "new_relic"

	// ActorEntityTypeNunc captures enum value "nunc"
	ActorEntityTypeNunc string = "nunc"

	// ActorEntityTypeGithub captures enum value "github"
	ActorEntityTypeGithub string = "github"

	// ActorEntityTypeGiphy captures enum value "giphy"
	ActorEntityTypeGiphy string = "giphy"

	// ActorEntityTypeGoogleMeet captures enum value "google_meet"
	ActorEntityTypeGoogleMeet string = "google_meet"

	// ActorEntityTypeMicrosoftTeams captures enum value "microsoft_teams"
	ActorEntityTypeMicrosoftTeams string = "microsoft_teams"

	// ActorEntityTypeWebex captures enum value "webex"
	ActorEntityTypeWebex string = "webex"

	// ActorEntityTypeJiraCloud captures enum value "jira_cloud"
	ActorEntityTypeJiraCloud string = "jira_cloud"

	// ActorEntityTypeJiraOnprem captures enum value "jira_onprem"
	ActorEntityTypeJiraOnprem string = "jira_onprem"

	// ActorEntityTypeOpsgenie captures enum value "opsgenie"
	ActorEntityTypeOpsgenie string = "opsgenie"

	// ActorEntityTypePagerDuty captures enum value "pager_duty"
	ActorEntityTypePagerDuty string = "pager_duty"

	// ActorEntityTypeHoneycomb captures enum value "honeycomb"
	ActorEntityTypeHoneycomb string = "honeycomb"

	// ActorEntityTypePatchy captures enum value "patchy"
	ActorEntityTypePatchy string = "patchy"

	// ActorEntityTypeServiceNow captures enum value "service_now"
	ActorEntityTypeServiceNow string = "service_now"

	// ActorEntityTypeSlack captures enum value "slack"
	ActorEntityTypeSlack string = "slack"

	// ActorEntityTypeStatuspage captures enum value "statuspage"
	ActorEntityTypeStatuspage string = "statuspage"

	// ActorEntityTypeVictorops captures enum value "victorops"
	ActorEntityTypeVictorops string = "victorops"

	// ActorEntityTypeZendesk captures enum value "zendesk"
	ActorEntityTypeZendesk string = "zendesk"

	// ActorEntityTypeZoom captures enum value "zoom"
	ActorEntityTypeZoom string = "zoom"

	// ActorEntityTypeConfluenceCloud captures enum value "confluence_cloud"
	ActorEntityTypeConfluenceCloud string = "confluence_cloud"

	// ActorEntityTypeGoogleDocs captures enum value "google_docs"
	ActorEntityTypeGoogleDocs string = "google_docs"

	// ActorEntityTypeZoomV2 captures enum value "zoom_v2"
	ActorEntityTypeZoomV2 string = "zoom_v2"
)

// prop value enum
func (m *ActorEntity) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, actorEntityTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ActorEntity) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this actor entity based on context it is used
func (m *ActorEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ActorEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActorEntity) UnmarshalBinary(b []byte) error {
	var res ActorEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
