// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes Allows for upvoting or downvoting an event
//
// swagger:model patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIdMessagesMessageIdVotes
type PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes struct {

	// The direction you would like to vote, or if you dig it
	// Required: true
	// Enum: [up down dig]
	Direction *string `json:"direction"`
}

// Validate validates this patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes
func (m *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIdMessagesMessageIdVotesTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["up","down","dig"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIdMessagesMessageIdVotesTypeDirectionPropEnum = append(patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIdMessagesMessageIdVotesTypeDirectionPropEnum, v)
	}
}

const (

	// PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesDirectionUp captures enum value "up"
	PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesDirectionUp string = "up"

	// PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesDirectionDown captures enum value "down"
	PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesDirectionDown string = "down"

	// PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesDirectionDig captures enum value "dig"
	PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesDirectionDig string = "dig"
)

// prop value enum
func (m *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) validateDirectionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIdMessagesMessageIdVotesTypeDirectionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) validateDirection(formats strfmt.Registry) error {

	if err := validate.Required("direction", "body", m.Direction); err != nil {
		return err
	}

	// value enum
	if err := m.validateDirectionEnum("direction", "body", *m.Direction); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes based on context it is used
func (m *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) UnmarshalBinary(b []byte) error {
	var res PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
