// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateIncident Updates an incident with provided parameters
//
// swagger:model update_incident
type UpdateIncident struct {

	// customer impact summary
	CustomerImpactSummary string `json:"customer_impact_summary,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// Key:value pairs to track custom data for the incident
	Labels interface{} `json:"labels,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// priority
	Priority string `json:"priority,omitempty"`

	// severity
	Severity string `json:"severity,omitempty"`

	// severity condition id
	SeverityConditionID string `json:"severity_condition_id,omitempty"`

	// severity impact id
	SeverityImpactID string `json:"severity_impact_id,omitempty"`

	// summary
	Summary string `json:"summary,omitempty"`

	// List of tags for the incident
	TagList []string `json:"tag_list"`
}

// Validate validates this update incident
func (m *UpdateIncident) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update incident based on context it is used
func (m *UpdateIncident) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateIncident) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateIncident) UnmarshalBinary(b []byte) error {
	var res UpdateIncident
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
