// Code generated by go-swagger; DO NOT EDIT.

package runbooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateRunbookParams creates a new UpdateRunbookParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateRunbookParams() *UpdateRunbookParams {
	return &UpdateRunbookParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateRunbookParamsWithTimeout creates a new UpdateRunbookParams object
// with the ability to set a timeout on a request.
func NewUpdateRunbookParamsWithTimeout(timeout time.Duration) *UpdateRunbookParams {
	return &UpdateRunbookParams{
		timeout: timeout,
	}
}

// NewUpdateRunbookParamsWithContext creates a new UpdateRunbookParams object
// with the ability to set a context for a request.
func NewUpdateRunbookParamsWithContext(ctx context.Context) *UpdateRunbookParams {
	return &UpdateRunbookParams{
		Context: ctx,
	}
}

// NewUpdateRunbookParamsWithHTTPClient creates a new UpdateRunbookParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateRunbookParamsWithHTTPClient(client *http.Client) *UpdateRunbookParams {
	return &UpdateRunbookParams{
		HTTPClient: client,
	}
}

/*
UpdateRunbookParams contains all the parameters to send to the API endpoint

	for the update runbook operation.

	Typically these are written to a http.Request.
*/
type UpdateRunbookParams struct {

	// RunbookID.
	RunbookID string

	// UpdateRunbook.
	UpdateRunbook *models.UpdateRunbook

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update runbook params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateRunbookParams) WithDefaults() *UpdateRunbookParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update runbook params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateRunbookParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update runbook params
func (o *UpdateRunbookParams) WithTimeout(timeout time.Duration) *UpdateRunbookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update runbook params
func (o *UpdateRunbookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update runbook params
func (o *UpdateRunbookParams) WithContext(ctx context.Context) *UpdateRunbookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update runbook params
func (o *UpdateRunbookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update runbook params
func (o *UpdateRunbookParams) WithHTTPClient(client *http.Client) *UpdateRunbookParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update runbook params
func (o *UpdateRunbookParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRunbookID adds the runbookID to the update runbook params
func (o *UpdateRunbookParams) WithRunbookID(runbookID string) *UpdateRunbookParams {
	o.SetRunbookID(runbookID)
	return o
}

// SetRunbookID adds the runbookId to the update runbook params
func (o *UpdateRunbookParams) SetRunbookID(runbookID string) {
	o.RunbookID = runbookID
}

// WithUpdateRunbook adds the updateRunbook to the update runbook params
func (o *UpdateRunbookParams) WithUpdateRunbook(updateRunbook *models.UpdateRunbook) *UpdateRunbookParams {
	o.SetUpdateRunbook(updateRunbook)
	return o
}

// SetUpdateRunbook adds the updateRunbook to the update runbook params
func (o *UpdateRunbookParams) SetUpdateRunbook(updateRunbook *models.UpdateRunbook) {
	o.UpdateRunbook = updateRunbook
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateRunbookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param runbook_id
	if err := r.SetPathParam("runbook_id", o.RunbookID); err != nil {
		return err
	}
	if o.UpdateRunbook != nil {
		if err := r.SetBodyParam(o.UpdateRunbook); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
