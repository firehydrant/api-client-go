// Code generated by go-swagger; DO NOT EDIT.

package runbooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewPutV1RunbooksRunbookIDParams creates a new PutV1RunbooksRunbookIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutV1RunbooksRunbookIDParams() *PutV1RunbooksRunbookIDParams {
	return &PutV1RunbooksRunbookIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1RunbooksRunbookIDParamsWithTimeout creates a new PutV1RunbooksRunbookIDParams object
// with the ability to set a timeout on a request.
func NewPutV1RunbooksRunbookIDParamsWithTimeout(timeout time.Duration) *PutV1RunbooksRunbookIDParams {
	return &PutV1RunbooksRunbookIDParams{
		timeout: timeout,
	}
}

// NewPutV1RunbooksRunbookIDParamsWithContext creates a new PutV1RunbooksRunbookIDParams object
// with the ability to set a context for a request.
func NewPutV1RunbooksRunbookIDParamsWithContext(ctx context.Context) *PutV1RunbooksRunbookIDParams {
	return &PutV1RunbooksRunbookIDParams{
		Context: ctx,
	}
}

// NewPutV1RunbooksRunbookIDParamsWithHTTPClient creates a new PutV1RunbooksRunbookIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutV1RunbooksRunbookIDParamsWithHTTPClient(client *http.Client) *PutV1RunbooksRunbookIDParams {
	return &PutV1RunbooksRunbookIDParams{
		HTTPClient: client,
	}
}

/*
PutV1RunbooksRunbookIDParams contains all the parameters to send to the API endpoint

	for the put v1 runbooks runbook Id operation.

	Typically these are written to a http.Request.
*/
type PutV1RunbooksRunbookIDParams struct {

	// PutV1RunbooksRunbookID.
	PutV1RunbooksRunbookID *models.PutV1RunbooksRunbookID

	// RunbookID.
	RunbookID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put v1 runbooks runbook Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1RunbooksRunbookIDParams) WithDefaults() *PutV1RunbooksRunbookIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put v1 runbooks runbook Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1RunbooksRunbookIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) WithTimeout(timeout time.Duration) *PutV1RunbooksRunbookIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) WithContext(ctx context.Context) *PutV1RunbooksRunbookIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) WithHTTPClient(client *http.Client) *PutV1RunbooksRunbookIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPutV1RunbooksRunbookID adds the putV1RunbooksRunbookID to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) WithPutV1RunbooksRunbookID(putV1RunbooksRunbookID *models.PutV1RunbooksRunbookID) *PutV1RunbooksRunbookIDParams {
	o.SetPutV1RunbooksRunbookID(putV1RunbooksRunbookID)
	return o
}

// SetPutV1RunbooksRunbookID adds the putV1RunbooksRunbookId to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) SetPutV1RunbooksRunbookID(putV1RunbooksRunbookID *models.PutV1RunbooksRunbookID) {
	o.PutV1RunbooksRunbookID = putV1RunbooksRunbookID
}

// WithRunbookID adds the runbookID to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) WithRunbookID(runbookID string) *PutV1RunbooksRunbookIDParams {
	o.SetRunbookID(runbookID)
	return o
}

// SetRunbookID adds the runbookId to the put v1 runbooks runbook Id params
func (o *PutV1RunbooksRunbookIDParams) SetRunbookID(runbookID string) {
	o.RunbookID = runbookID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1RunbooksRunbookIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.PutV1RunbooksRunbookID != nil {
		if err := r.SetBodyParam(o.PutV1RunbooksRunbookID); err != nil {
			return err
		}
	}

	// path param runbook_id
	if err := r.SetPathParam("runbook_id", o.RunbookID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
