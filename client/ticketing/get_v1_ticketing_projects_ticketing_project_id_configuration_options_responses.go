// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsReader is a Reader for the GetV1TicketingProjectsTicketingProjectIDConfigurationOptions structure.
type GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /v1/ticketing/projects/{ticketing_project_id}/configuration_options] getV1TicketingProjectsTicketingProjectIdConfigurationOptions", response, response.Code())
	}
}

// NewGetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK creates a GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK with default headers values
func NewGetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK() *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK {
	return &GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK{}
}

/*
GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK describes a response with status code 200, with default header values.

get ConfigurationOption(s)
*/
type GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK struct {
}

// IsSuccess returns true when this get v1 ticketing projects ticketing project Id configuration options o k response has a 2xx status code
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 ticketing projects ticketing project Id configuration options o k response has a 3xx status code
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 ticketing projects ticketing project Id configuration options o k response has a 4xx status code
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 ticketing projects ticketing project Id configuration options o k response has a 5xx status code
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 ticketing projects ticketing project Id configuration options o k response a status code equal to that given
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 ticketing projects ticketing project Id configuration options o k response
func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) Code() int {
	return 200
}

func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/ticketing/projects/{ticketing_project_id}/configuration_options][%d] getV1TicketingProjectsTicketingProjectIdConfigurationOptionsOK ", 200)
}

func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) String() string {
	return fmt.Sprintf("[GET /v1/ticketing/projects/{ticketing_project_id}/configuration_options][%d] getV1TicketingProjectsTicketingProjectIdConfigurationOptionsOK ", 200)
}

func (o *GetV1TicketingProjectsTicketingProjectIDConfigurationOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
