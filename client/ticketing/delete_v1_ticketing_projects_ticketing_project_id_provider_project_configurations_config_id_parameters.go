// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams creates a new DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams() *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	return &DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParamsWithTimeout creates a new DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams object
// with the ability to set a timeout on a request.
func NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParamsWithTimeout(timeout time.Duration) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	return &DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams{
		timeout: timeout,
	}
}

// NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParamsWithContext creates a new DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams object
// with the ability to set a context for a request.
func NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParamsWithContext(ctx context.Context) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	return &DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams{
		Context: ctx,
	}
}

// NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParamsWithHTTPClient creates a new DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParamsWithHTTPClient(client *http.Client) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	return &DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams{
		HTTPClient: client,
	}
}

/* DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams contains all the parameters to send to the API endpoint
   for the delete v1 ticketing projects ticketing project Id provider project configurations config Id operation.

   Typically these are written to a http.Request.
*/
type DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams struct {

	// ConfigID.
	//
	// Format: int32
	ConfigID int32

	// TicketingProjectID.
	TicketingProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete v1 ticketing projects ticketing project Id provider project configurations config Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WithDefaults() *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete v1 ticketing projects ticketing project Id provider project configurations config Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WithTimeout(timeout time.Duration) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WithContext(ctx context.Context) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WithHTTPClient(client *http.Client) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConfigID adds the configID to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WithConfigID(configID int32) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	o.SetConfigID(configID)
	return o
}

// SetConfigID adds the configId to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) SetConfigID(configID int32) {
	o.ConfigID = configID
}

// WithTicketingProjectID adds the ticketingProjectID to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WithTicketingProjectID(ticketingProjectID string) *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams {
	o.SetTicketingProjectID(ticketingProjectID)
	return o
}

// SetTicketingProjectID adds the ticketingProjectId to the delete v1 ticketing projects ticketing project Id provider project configurations config Id params
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) SetTicketingProjectID(ticketingProjectID string) {
	o.TicketingProjectID = ticketingProjectID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteV1TicketingProjectsTicketingProjectIDProviderProjectConfigurationsConfigIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param config_id
	if err := r.SetPathParam("config_id", swag.FormatInt32(o.ConfigID)); err != nil {
		return err
	}

	// path param ticketing_project_id
	if err := r.SetPathParam("ticketing_project_id", o.TicketingProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
