// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// PostV1TicketingTicketsReader is a Reader for the PostV1TicketingTickets structure.
type PostV1TicketingTicketsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1TicketingTicketsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1TicketingTicketsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /v1/ticketing/tickets] postV1TicketingTickets", response, response.Code())
	}
}

// NewPostV1TicketingTicketsCreated creates a PostV1TicketingTicketsCreated with default headers values
func NewPostV1TicketingTicketsCreated() *PostV1TicketingTicketsCreated {
	return &PostV1TicketingTicketsCreated{}
}

/*
PostV1TicketingTicketsCreated describes a response with status code 201, with default header values.

Creates a ticket for a project
*/
type PostV1TicketingTicketsCreated struct {
	Payload *models.TicketingTicketEntity
}

// IsSuccess returns true when this post v1 ticketing tickets created response has a 2xx status code
func (o *PostV1TicketingTicketsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 ticketing tickets created response has a 3xx status code
func (o *PostV1TicketingTicketsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 ticketing tickets created response has a 4xx status code
func (o *PostV1TicketingTicketsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 ticketing tickets created response has a 5xx status code
func (o *PostV1TicketingTicketsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 ticketing tickets created response a status code equal to that given
func (o *PostV1TicketingTicketsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 ticketing tickets created response
func (o *PostV1TicketingTicketsCreated) Code() int {
	return 201
}

func (o *PostV1TicketingTicketsCreated) Error() string {
	return fmt.Sprintf("[POST /v1/ticketing/tickets][%d] postV1TicketingTicketsCreated  %+v", 201, o.Payload)
}

func (o *PostV1TicketingTicketsCreated) String() string {
	return fmt.Sprintf("[POST /v1/ticketing/tickets][%d] postV1TicketingTicketsCreated  %+v", 201, o.Payload)
}

func (o *PostV1TicketingTicketsCreated) GetPayload() *models.TicketingTicketEntity {
	return o.Payload
}

func (o *PostV1TicketingTicketsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TicketingTicketEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
