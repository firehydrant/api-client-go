// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostV1ServicesServiceLinksParams creates a new PostV1ServicesServiceLinksParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostV1ServicesServiceLinksParams() *PostV1ServicesServiceLinksParams {
	return &PostV1ServicesServiceLinksParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1ServicesServiceLinksParamsWithTimeout creates a new PostV1ServicesServiceLinksParams object
// with the ability to set a timeout on a request.
func NewPostV1ServicesServiceLinksParamsWithTimeout(timeout time.Duration) *PostV1ServicesServiceLinksParams {
	return &PostV1ServicesServiceLinksParams{
		timeout: timeout,
	}
}

// NewPostV1ServicesServiceLinksParamsWithContext creates a new PostV1ServicesServiceLinksParams object
// with the ability to set a context for a request.
func NewPostV1ServicesServiceLinksParamsWithContext(ctx context.Context) *PostV1ServicesServiceLinksParams {
	return &PostV1ServicesServiceLinksParams{
		Context: ctx,
	}
}

// NewPostV1ServicesServiceLinksParamsWithHTTPClient creates a new PostV1ServicesServiceLinksParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostV1ServicesServiceLinksParamsWithHTTPClient(client *http.Client) *PostV1ServicesServiceLinksParams {
	return &PostV1ServicesServiceLinksParams{
		HTTPClient: client,
	}
}

/* PostV1ServicesServiceLinksParams contains all the parameters to send to the API endpoint
   for the post v1 services service links operation.

   Typically these are written to a http.Request.
*/
type PostV1ServicesServiceLinksParams struct {

	/* ConnectionID.

	   ID for the integration. This can be found by going to the edit page for the integration
	*/
	ConnectionID string

	/* ExternalServiceIds.

	   ID of the service
	*/
	ExternalServiceIds []string

	/* Integration.

	   The name of the service
	*/
	Integration string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post v1 services service links params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1ServicesServiceLinksParams) WithDefaults() *PostV1ServicesServiceLinksParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post v1 services service links params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1ServicesServiceLinksParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) WithTimeout(timeout time.Duration) *PostV1ServicesServiceLinksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) WithContext(ctx context.Context) *PostV1ServicesServiceLinksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) WithHTTPClient(client *http.Client) *PostV1ServicesServiceLinksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) WithConnectionID(connectionID string) *PostV1ServicesServiceLinksParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) SetConnectionID(connectionID string) {
	o.ConnectionID = connectionID
}

// WithExternalServiceIds adds the externalServiceIds to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) WithExternalServiceIds(externalServiceIds []string) *PostV1ServicesServiceLinksParams {
	o.SetExternalServiceIds(externalServiceIds)
	return o
}

// SetExternalServiceIds adds the externalServiceIds to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) SetExternalServiceIds(externalServiceIds []string) {
	o.ExternalServiceIds = externalServiceIds
}

// WithIntegration adds the integration to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) WithIntegration(integration string) *PostV1ServicesServiceLinksParams {
	o.SetIntegration(integration)
	return o
}

// SetIntegration adds the integration to the post v1 services service links params
func (o *PostV1ServicesServiceLinksParams) SetIntegration(integration string) {
	o.Integration = integration
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1ServicesServiceLinksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param connection_id
	frConnectionID := o.ConnectionID
	fConnectionID := frConnectionID
	if fConnectionID != "" {
		if err := r.SetFormParam("connection_id", fConnectionID); err != nil {
			return err
		}
	}

	if o.ExternalServiceIds != nil {

		// binding items for external_service_ids
		joinedExternalServiceIds := o.bindParamExternalServiceIds(reg)

		// form array param external_service_ids
		if err := r.SetFormParam("external_service_ids", joinedExternalServiceIds...); err != nil {
			return err
		}
	}

	// form param integration
	frIntegration := o.Integration
	fIntegration := frIntegration
	if fIntegration != "" {
		if err := r.SetFormParam("integration", fIntegration); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPostV1ServicesServiceLinks binds the parameter external_service_ids
func (o *PostV1ServicesServiceLinksParams) bindParamExternalServiceIds(formats strfmt.Registry) []string {
	externalServiceIdsIR := o.ExternalServiceIds

	var externalServiceIdsIC []string
	for _, externalServiceIdsIIR := range externalServiceIdsIR { // explode []string

		externalServiceIdsIIV := externalServiceIdsIIR // string as string
		externalServiceIdsIC = append(externalServiceIdsIC, externalServiceIdsIIV)
	}

	// items.CollectionFormat: ""
	externalServiceIdsIS := swag.JoinByFormat(externalServiceIdsIC, "")

	return externalServiceIdsIS
}
