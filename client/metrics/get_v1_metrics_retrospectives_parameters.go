// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetV1MetricsRetrospectivesParams creates a new GetV1MetricsRetrospectivesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1MetricsRetrospectivesParams() *GetV1MetricsRetrospectivesParams {
	return &GetV1MetricsRetrospectivesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1MetricsRetrospectivesParamsWithTimeout creates a new GetV1MetricsRetrospectivesParams object
// with the ability to set a timeout on a request.
func NewGetV1MetricsRetrospectivesParamsWithTimeout(timeout time.Duration) *GetV1MetricsRetrospectivesParams {
	return &GetV1MetricsRetrospectivesParams{
		timeout: timeout,
	}
}

// NewGetV1MetricsRetrospectivesParamsWithContext creates a new GetV1MetricsRetrospectivesParams object
// with the ability to set a context for a request.
func NewGetV1MetricsRetrospectivesParamsWithContext(ctx context.Context) *GetV1MetricsRetrospectivesParams {
	return &GetV1MetricsRetrospectivesParams{
		Context: ctx,
	}
}

// NewGetV1MetricsRetrospectivesParamsWithHTTPClient creates a new GetV1MetricsRetrospectivesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1MetricsRetrospectivesParamsWithHTTPClient(client *http.Client) *GetV1MetricsRetrospectivesParams {
	return &GetV1MetricsRetrospectivesParams{
		HTTPClient: client,
	}
}

/* GetV1MetricsRetrospectivesParams contains all the parameters to send to the API endpoint
   for the get v1 metrics retrospectives operation.

   Typically these are written to a http.Request.
*/
type GetV1MetricsRetrospectivesParams struct {

	/* EndDate.

	   The end date to return metrics from

	   Format: date
	*/
	EndDate *strfmt.Date

	/* StartDate.

	   The start date to return metrics from

	   Format: date
	*/
	StartDate *strfmt.Date

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 metrics retrospectives params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1MetricsRetrospectivesParams) WithDefaults() *GetV1MetricsRetrospectivesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 metrics retrospectives params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1MetricsRetrospectivesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) WithTimeout(timeout time.Duration) *GetV1MetricsRetrospectivesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) WithContext(ctx context.Context) *GetV1MetricsRetrospectivesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) WithHTTPClient(client *http.Client) *GetV1MetricsRetrospectivesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndDate adds the endDate to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) WithEndDate(endDate *strfmt.Date) *GetV1MetricsRetrospectivesParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) SetEndDate(endDate *strfmt.Date) {
	o.EndDate = endDate
}

// WithStartDate adds the startDate to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) WithStartDate(startDate *strfmt.Date) *GetV1MetricsRetrospectivesParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the get v1 metrics retrospectives params
func (o *GetV1MetricsRetrospectivesParams) SetStartDate(startDate *strfmt.Date) {
	o.StartDate = startDate
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1MetricsRetrospectivesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndDate != nil {

		// query param end_date
		var qrEndDate strfmt.Date

		if o.EndDate != nil {
			qrEndDate = *o.EndDate
		}
		qEndDate := qrEndDate.String()
		if qEndDate != "" {

			if err := r.SetQueryParam("end_date", qEndDate); err != nil {
				return err
			}
		}
	}

	if o.StartDate != nil {

		// query param start_date
		var qrStartDate strfmt.Date

		if o.StartDate != nil {
			qrStartDate = *o.StartDate
		}
		qStartDate := qrStartDate.String()
		if qStartDate != "" {

			if err := r.SetQueryParam("start_date", qStartDate); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
