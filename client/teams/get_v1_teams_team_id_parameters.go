// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetV1TeamsTeamIDParams creates a new GetV1TeamsTeamIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1TeamsTeamIDParams() *GetV1TeamsTeamIDParams {
	return &GetV1TeamsTeamIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1TeamsTeamIDParamsWithTimeout creates a new GetV1TeamsTeamIDParams object
// with the ability to set a timeout on a request.
func NewGetV1TeamsTeamIDParamsWithTimeout(timeout time.Duration) *GetV1TeamsTeamIDParams {
	return &GetV1TeamsTeamIDParams{
		timeout: timeout,
	}
}

// NewGetV1TeamsTeamIDParamsWithContext creates a new GetV1TeamsTeamIDParams object
// with the ability to set a context for a request.
func NewGetV1TeamsTeamIDParamsWithContext(ctx context.Context) *GetV1TeamsTeamIDParams {
	return &GetV1TeamsTeamIDParams{
		Context: ctx,
	}
}

// NewGetV1TeamsTeamIDParamsWithHTTPClient creates a new GetV1TeamsTeamIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1TeamsTeamIDParamsWithHTTPClient(client *http.Client) *GetV1TeamsTeamIDParams {
	return &GetV1TeamsTeamIDParams{
		HTTPClient: client,
	}
}

/* GetV1TeamsTeamIDParams contains all the parameters to send to the API endpoint
   for the get v1 teams team Id operation.

   Typically these are written to a http.Request.
*/
type GetV1TeamsTeamIDParams struct {

	/* Lite.

	   Boolean to determine whether to return a slimified version of the teams object
	*/
	Lite *bool

	// TeamID.
	TeamID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 teams team Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1TeamsTeamIDParams) WithDefaults() *GetV1TeamsTeamIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 teams team Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1TeamsTeamIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) WithTimeout(timeout time.Duration) *GetV1TeamsTeamIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) WithContext(ctx context.Context) *GetV1TeamsTeamIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) WithHTTPClient(client *http.Client) *GetV1TeamsTeamIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLite adds the lite to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) WithLite(lite *bool) *GetV1TeamsTeamIDParams {
	o.SetLite(lite)
	return o
}

// SetLite adds the lite to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) SetLite(lite *bool) {
	o.Lite = lite
}

// WithTeamID adds the teamID to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) WithTeamID(teamID string) *GetV1TeamsTeamIDParams {
	o.SetTeamID(teamID)
	return o
}

// SetTeamID adds the teamId to the get v1 teams team Id params
func (o *GetV1TeamsTeamIDParams) SetTeamID(teamID string) {
	o.TeamID = teamID
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1TeamsTeamIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Lite != nil {

		// query param lite
		var qrLite bool

		if o.Lite != nil {
			qrLite = *o.Lite
		}
		qLite := swag.FormatBool(qrLite)
		if qLite != "" {

			if err := r.SetQueryParam("lite", qLite); err != nil {
				return err
			}
		}
	}

	// path param team_id
	if err := r.SetPathParam("team_id", o.TeamID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
