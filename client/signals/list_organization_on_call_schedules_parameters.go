// Code generated by go-swagger; DO NOT EDIT.

package signals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListOrganizationOnCallSchedulesParams creates a new ListOrganizationOnCallSchedulesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListOrganizationOnCallSchedulesParams() *ListOrganizationOnCallSchedulesParams {
	return &ListOrganizationOnCallSchedulesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListOrganizationOnCallSchedulesParamsWithTimeout creates a new ListOrganizationOnCallSchedulesParams object
// with the ability to set a timeout on a request.
func NewListOrganizationOnCallSchedulesParamsWithTimeout(timeout time.Duration) *ListOrganizationOnCallSchedulesParams {
	return &ListOrganizationOnCallSchedulesParams{
		timeout: timeout,
	}
}

// NewListOrganizationOnCallSchedulesParamsWithContext creates a new ListOrganizationOnCallSchedulesParams object
// with the ability to set a context for a request.
func NewListOrganizationOnCallSchedulesParamsWithContext(ctx context.Context) *ListOrganizationOnCallSchedulesParams {
	return &ListOrganizationOnCallSchedulesParams{
		Context: ctx,
	}
}

// NewListOrganizationOnCallSchedulesParamsWithHTTPClient creates a new ListOrganizationOnCallSchedulesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListOrganizationOnCallSchedulesParamsWithHTTPClient(client *http.Client) *ListOrganizationOnCallSchedulesParams {
	return &ListOrganizationOnCallSchedulesParams{
		HTTPClient: client,
	}
}

/*
ListOrganizationOnCallSchedulesParams contains all the parameters to send to the API endpoint

	for the list organization on call schedules operation.

	Typically these are written to a http.Request.
*/
type ListOrganizationOnCallSchedulesParams struct {

	/* TeamID.

	   An optional comma separated list of team IDs to filter currently on-call users by
	*/
	TeamID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list organization on call schedules params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListOrganizationOnCallSchedulesParams) WithDefaults() *ListOrganizationOnCallSchedulesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list organization on call schedules params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListOrganizationOnCallSchedulesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) WithTimeout(timeout time.Duration) *ListOrganizationOnCallSchedulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) WithContext(ctx context.Context) *ListOrganizationOnCallSchedulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) WithHTTPClient(client *http.Client) *ListOrganizationOnCallSchedulesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTeamID adds the teamID to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) WithTeamID(teamID *string) *ListOrganizationOnCallSchedulesParams {
	o.SetTeamID(teamID)
	return o
}

// SetTeamID adds the teamId to the list organization on call schedules params
func (o *ListOrganizationOnCallSchedulesParams) SetTeamID(teamID *string) {
	o.TeamID = teamID
}

// WriteToRequest writes these params to a swagger request
func (o *ListOrganizationOnCallSchedulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.TeamID != nil {

		// query param team_id
		var qrTeamID string

		if o.TeamID != nil {
			qrTeamID = *o.TeamID
		}
		qTeamID := qrTeamID
		if qTeamID != "" {

			if err := r.SetQueryParam("team_id", qTeamID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
