// Code generated by go-swagger; DO NOT EDIT.

package signals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateOnCallShiftParams creates a new UpdateOnCallShiftParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateOnCallShiftParams() *UpdateOnCallShiftParams {
	return &UpdateOnCallShiftParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOnCallShiftParamsWithTimeout creates a new UpdateOnCallShiftParams object
// with the ability to set a timeout on a request.
func NewUpdateOnCallShiftParamsWithTimeout(timeout time.Duration) *UpdateOnCallShiftParams {
	return &UpdateOnCallShiftParams{
		timeout: timeout,
	}
}

// NewUpdateOnCallShiftParamsWithContext creates a new UpdateOnCallShiftParams object
// with the ability to set a context for a request.
func NewUpdateOnCallShiftParamsWithContext(ctx context.Context) *UpdateOnCallShiftParams {
	return &UpdateOnCallShiftParams{
		Context: ctx,
	}
}

// NewUpdateOnCallShiftParamsWithHTTPClient creates a new UpdateOnCallShiftParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateOnCallShiftParamsWithHTTPClient(client *http.Client) *UpdateOnCallShiftParams {
	return &UpdateOnCallShiftParams{
		HTTPClient: client,
	}
}

/*
UpdateOnCallShiftParams contains all the parameters to send to the API endpoint

	for the update on call shift operation.

	Typically these are written to a http.Request.
*/
type UpdateOnCallShiftParams struct {

	// ID.
	ID string

	// ScheduleID.
	ScheduleID string

	// TeamID.
	TeamID string

	// UpdateOnCallShift.
	UpdateOnCallShift *models.UpdateOnCallShift

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update on call shift params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOnCallShiftParams) WithDefaults() *UpdateOnCallShiftParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update on call shift params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOnCallShiftParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update on call shift params
func (o *UpdateOnCallShiftParams) WithTimeout(timeout time.Duration) *UpdateOnCallShiftParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update on call shift params
func (o *UpdateOnCallShiftParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update on call shift params
func (o *UpdateOnCallShiftParams) WithContext(ctx context.Context) *UpdateOnCallShiftParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update on call shift params
func (o *UpdateOnCallShiftParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update on call shift params
func (o *UpdateOnCallShiftParams) WithHTTPClient(client *http.Client) *UpdateOnCallShiftParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update on call shift params
func (o *UpdateOnCallShiftParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the update on call shift params
func (o *UpdateOnCallShiftParams) WithID(id string) *UpdateOnCallShiftParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update on call shift params
func (o *UpdateOnCallShiftParams) SetID(id string) {
	o.ID = id
}

// WithScheduleID adds the scheduleID to the update on call shift params
func (o *UpdateOnCallShiftParams) WithScheduleID(scheduleID string) *UpdateOnCallShiftParams {
	o.SetScheduleID(scheduleID)
	return o
}

// SetScheduleID adds the scheduleId to the update on call shift params
func (o *UpdateOnCallShiftParams) SetScheduleID(scheduleID string) {
	o.ScheduleID = scheduleID
}

// WithTeamID adds the teamID to the update on call shift params
func (o *UpdateOnCallShiftParams) WithTeamID(teamID string) *UpdateOnCallShiftParams {
	o.SetTeamID(teamID)
	return o
}

// SetTeamID adds the teamId to the update on call shift params
func (o *UpdateOnCallShiftParams) SetTeamID(teamID string) {
	o.TeamID = teamID
}

// WithUpdateOnCallShift adds the updateOnCallShift to the update on call shift params
func (o *UpdateOnCallShiftParams) WithUpdateOnCallShift(updateOnCallShift *models.UpdateOnCallShift) *UpdateOnCallShiftParams {
	o.SetUpdateOnCallShift(updateOnCallShift)
	return o
}

// SetUpdateOnCallShift adds the updateOnCallShift to the update on call shift params
func (o *UpdateOnCallShiftParams) SetUpdateOnCallShift(updateOnCallShift *models.UpdateOnCallShift) {
	o.UpdateOnCallShift = updateOnCallShift
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOnCallShiftParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param schedule_id
	if err := r.SetPathParam("schedule_id", o.ScheduleID); err != nil {
		return err
	}

	// path param team_id
	if err := r.SetPathParam("team_id", o.TeamID); err != nil {
		return err
	}
	if o.UpdateOnCallShift != nil {
		if err := r.SetBodyParam(o.UpdateOnCallShift); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
