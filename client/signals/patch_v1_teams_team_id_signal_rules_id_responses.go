// Code generated by go-swagger; DO NOT EDIT.

package signals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PatchV1TeamsTeamIDSignalRulesIDReader is a Reader for the PatchV1TeamsTeamIDSignalRulesID structure.
type PatchV1TeamsTeamIDSignalRulesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchV1TeamsTeamIDSignalRulesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchV1TeamsTeamIDSignalRulesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchV1TeamsTeamIDSignalRulesIDOK creates a PatchV1TeamsTeamIDSignalRulesIDOK with default headers values
func NewPatchV1TeamsTeamIDSignalRulesIDOK() *PatchV1TeamsTeamIDSignalRulesIDOK {
	return &PatchV1TeamsTeamIDSignalRulesIDOK{}
}

/*
PatchV1TeamsTeamIDSignalRulesIDOK describes a response with status code 200, with default header values.

Update a Signals rule by ID
*/
type PatchV1TeamsTeamIDSignalRulesIDOK struct {
}

// IsSuccess returns true when this patch v1 teams team Id signal rules Id o k response has a 2xx status code
func (o *PatchV1TeamsTeamIDSignalRulesIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch v1 teams team Id signal rules Id o k response has a 3xx status code
func (o *PatchV1TeamsTeamIDSignalRulesIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch v1 teams team Id signal rules Id o k response has a 4xx status code
func (o *PatchV1TeamsTeamIDSignalRulesIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch v1 teams team Id signal rules Id o k response has a 5xx status code
func (o *PatchV1TeamsTeamIDSignalRulesIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch v1 teams team Id signal rules Id o k response a status code equal to that given
func (o *PatchV1TeamsTeamIDSignalRulesIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchV1TeamsTeamIDSignalRulesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/teams/{team_id}/signal_rules/{id}][%d] patchV1TeamsTeamIdSignalRulesIdOK ", 200)
}

func (o *PatchV1TeamsTeamIDSignalRulesIDOK) String() string {
	return fmt.Sprintf("[PATCH /v1/teams/{team_id}/signal_rules/{id}][%d] patchV1TeamsTeamIdSignalRulesIdOK ", 200)
}

func (o *PatchV1TeamsTeamIDSignalRulesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
