// Code generated by go-swagger; DO NOT EDIT.

package audiences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostV1AudiencesParams creates a new PostV1AudiencesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostV1AudiencesParams() *PostV1AudiencesParams {
	return &PostV1AudiencesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1AudiencesParamsWithTimeout creates a new PostV1AudiencesParams object
// with the ability to set a timeout on a request.
func NewPostV1AudiencesParamsWithTimeout(timeout time.Duration) *PostV1AudiencesParams {
	return &PostV1AudiencesParams{
		timeout: timeout,
	}
}

// NewPostV1AudiencesParamsWithContext creates a new PostV1AudiencesParams object
// with the ability to set a context for a request.
func NewPostV1AudiencesParamsWithContext(ctx context.Context) *PostV1AudiencesParams {
	return &PostV1AudiencesParams{
		Context: ctx,
	}
}

// NewPostV1AudiencesParamsWithHTTPClient creates a new PostV1AudiencesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostV1AudiencesParamsWithHTTPClient(client *http.Client) *PostV1AudiencesParams {
	return &PostV1AudiencesParams{
		HTTPClient: client,
	}
}

/*
PostV1AudiencesParams contains all the parameters to send to the API endpoint

	for the post v1 audiences operation.

	Typically these are written to a http.Request.
*/
type PostV1AudiencesParams struct {

	/* Default.

	   Whether this is the default audience
	*/
	Default *bool

	/* Description.

	   Description of the audience (max 4000 characters)
	*/
	Description string

	/* Details.

	   List of incident detail questions (1-10 items, max 255 chars each)
	*/
	Details []string

	/* Name.

	   Name of the audience (max 255 characters)
	*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post v1 audiences params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1AudiencesParams) WithDefaults() *PostV1AudiencesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post v1 audiences params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1AudiencesParams) SetDefaults() {
	var (
		defaultVarDefault = bool(false)
	)

	val := PostV1AudiencesParams{
		Default: &defaultVarDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the post v1 audiences params
func (o *PostV1AudiencesParams) WithTimeout(timeout time.Duration) *PostV1AudiencesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 audiences params
func (o *PostV1AudiencesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 audiences params
func (o *PostV1AudiencesParams) WithContext(ctx context.Context) *PostV1AudiencesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 audiences params
func (o *PostV1AudiencesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1 audiences params
func (o *PostV1AudiencesParams) WithHTTPClient(client *http.Client) *PostV1AudiencesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1 audiences params
func (o *PostV1AudiencesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDefault adds the defaultVar to the post v1 audiences params
func (o *PostV1AudiencesParams) WithDefault(defaultVar *bool) *PostV1AudiencesParams {
	o.SetDefault(defaultVar)
	return o
}

// SetDefault adds the default to the post v1 audiences params
func (o *PostV1AudiencesParams) SetDefault(defaultVar *bool) {
	o.Default = defaultVar
}

// WithDescription adds the description to the post v1 audiences params
func (o *PostV1AudiencesParams) WithDescription(description string) *PostV1AudiencesParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the post v1 audiences params
func (o *PostV1AudiencesParams) SetDescription(description string) {
	o.Description = description
}

// WithDetails adds the details to the post v1 audiences params
func (o *PostV1AudiencesParams) WithDetails(details []string) *PostV1AudiencesParams {
	o.SetDetails(details)
	return o
}

// SetDetails adds the details to the post v1 audiences params
func (o *PostV1AudiencesParams) SetDetails(details []string) {
	o.Details = details
}

// WithName adds the name to the post v1 audiences params
func (o *PostV1AudiencesParams) WithName(name string) *PostV1AudiencesParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post v1 audiences params
func (o *PostV1AudiencesParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1AudiencesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Default != nil {

		// form param default
		var frDefault bool
		if o.Default != nil {
			frDefault = *o.Default
		}
		fDefault := swag.FormatBool(frDefault)
		if fDefault != "" {
			if err := r.SetFormParam("default", fDefault); err != nil {
				return err
			}
		}
	}

	// form param description
	frDescription := o.Description
	fDescription := frDescription
	if fDescription != "" {
		if err := r.SetFormParam("description", fDescription); err != nil {
			return err
		}
	}

	if o.Details != nil {

		// binding items for details
		joinedDetails := o.bindParamDetails(reg)

		// form array param details
		if err := r.SetFormParam("details", joinedDetails...); err != nil {
			return err
		}
	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPostV1Audiences binds the parameter details
func (o *PostV1AudiencesParams) bindParamDetails(formats strfmt.Registry) []string {
	detailsIR := o.Details

	var detailsIC []string
	for _, detailsIIR := range detailsIR { // explode []string

		detailsIIV := detailsIIR // string as string
		detailsIC = append(detailsIC, detailsIIV)
	}

	// items.CollectionFormat: ""
	detailsIS := swag.JoinByFormat(detailsIC, "")

	return detailsIS
}
