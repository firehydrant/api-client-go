// Code generated by go-swagger; DO NOT EDIT.

package audiences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetV1AudiencesParams creates a new GetV1AudiencesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1AudiencesParams() *GetV1AudiencesParams {
	return &GetV1AudiencesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1AudiencesParamsWithTimeout creates a new GetV1AudiencesParams object
// with the ability to set a timeout on a request.
func NewGetV1AudiencesParamsWithTimeout(timeout time.Duration) *GetV1AudiencesParams {
	return &GetV1AudiencesParams{
		timeout: timeout,
	}
}

// NewGetV1AudiencesParamsWithContext creates a new GetV1AudiencesParams object
// with the ability to set a context for a request.
func NewGetV1AudiencesParamsWithContext(ctx context.Context) *GetV1AudiencesParams {
	return &GetV1AudiencesParams{
		Context: ctx,
	}
}

// NewGetV1AudiencesParamsWithHTTPClient creates a new GetV1AudiencesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1AudiencesParamsWithHTTPClient(client *http.Client) *GetV1AudiencesParams {
	return &GetV1AudiencesParams{
		HTTPClient: client,
	}
}

/*
GetV1AudiencesParams contains all the parameters to send to the API endpoint

	for the get v1 audiences operation.

	Typically these are written to a http.Request.
*/
type GetV1AudiencesParams struct {

	/* IncludeArchived.

	   Include archived (discarded) audiences
	*/
	IncludeArchived *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 audiences params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1AudiencesParams) WithDefaults() *GetV1AudiencesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 audiences params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1AudiencesParams) SetDefaults() {
	var (
		includeArchivedDefault = bool(false)
	)

	val := GetV1AudiencesParams{
		IncludeArchived: &includeArchivedDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get v1 audiences params
func (o *GetV1AudiencesParams) WithTimeout(timeout time.Duration) *GetV1AudiencesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 audiences params
func (o *GetV1AudiencesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 audiences params
func (o *GetV1AudiencesParams) WithContext(ctx context.Context) *GetV1AudiencesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 audiences params
func (o *GetV1AudiencesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 audiences params
func (o *GetV1AudiencesParams) WithHTTPClient(client *http.Client) *GetV1AudiencesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 audiences params
func (o *GetV1AudiencesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeArchived adds the includeArchived to the get v1 audiences params
func (o *GetV1AudiencesParams) WithIncludeArchived(includeArchived *bool) *GetV1AudiencesParams {
	o.SetIncludeArchived(includeArchived)
	return o
}

// SetIncludeArchived adds the includeArchived to the get v1 audiences params
func (o *GetV1AudiencesParams) SetIncludeArchived(includeArchived *bool) {
	o.IncludeArchived = includeArchived
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1AudiencesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeArchived != nil {

		// query param include_archived
		var qrIncludeArchived bool

		if o.IncludeArchived != nil {
			qrIncludeArchived = *o.IncludeArchived
		}
		qIncludeArchived := swag.FormatBool(qrIncludeArchived)
		if qIncludeArchived != "" {

			if err := r.SetQueryParam("include_archived", qIncludeArchived); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
