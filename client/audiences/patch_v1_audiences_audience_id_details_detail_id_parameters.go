// Code generated by go-swagger; DO NOT EDIT.

package audiences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPatchV1AudiencesAudienceIDDetailsDetailIDParams creates a new PatchV1AudiencesAudienceIDDetailsDetailIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchV1AudiencesAudienceIDDetailsDetailIDParams() *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	return &PatchV1AudiencesAudienceIDDetailsDetailIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1AudiencesAudienceIDDetailsDetailIDParamsWithTimeout creates a new PatchV1AudiencesAudienceIDDetailsDetailIDParams object
// with the ability to set a timeout on a request.
func NewPatchV1AudiencesAudienceIDDetailsDetailIDParamsWithTimeout(timeout time.Duration) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	return &PatchV1AudiencesAudienceIDDetailsDetailIDParams{
		timeout: timeout,
	}
}

// NewPatchV1AudiencesAudienceIDDetailsDetailIDParamsWithContext creates a new PatchV1AudiencesAudienceIDDetailsDetailIDParams object
// with the ability to set a context for a request.
func NewPatchV1AudiencesAudienceIDDetailsDetailIDParamsWithContext(ctx context.Context) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	return &PatchV1AudiencesAudienceIDDetailsDetailIDParams{
		Context: ctx,
	}
}

// NewPatchV1AudiencesAudienceIDDetailsDetailIDParamsWithHTTPClient creates a new PatchV1AudiencesAudienceIDDetailsDetailIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchV1AudiencesAudienceIDDetailsDetailIDParamsWithHTTPClient(client *http.Client) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	return &PatchV1AudiencesAudienceIDDetailsDetailIDParams{
		HTTPClient: client,
	}
}

/*
PatchV1AudiencesAudienceIDDetailsDetailIDParams contains all the parameters to send to the API endpoint

	for the patch v1 audiences audience Id details detail Id operation.

	Typically these are written to a http.Request.
*/
type PatchV1AudiencesAudienceIDDetailsDetailIDParams struct {

	/* AudienceID.

	   Unique identifier of the audience
	*/
	AudienceID string

	/* DetailID.

	   Unique identifier of the detail to modify
	*/
	DetailID string

	/* Position.

	   New position for the question in the list (1-based indexing)

	   Format: int32
	*/
	Position *int32

	/* Question.

	   Updated text for the incident detail question (max 255 characters)
	*/
	Question *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch v1 audiences audience Id details detail Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithDefaults() *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch v1 audiences audience Id details detail Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithTimeout(timeout time.Duration) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithContext(ctx context.Context) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithHTTPClient(client *http.Client) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAudienceID adds the audienceID to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithAudienceID(audienceID string) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetAudienceID(audienceID)
	return o
}

// SetAudienceID adds the audienceId to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetAudienceID(audienceID string) {
	o.AudienceID = audienceID
}

// WithDetailID adds the detailID to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithDetailID(detailID string) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetDetailID(detailID)
	return o
}

// SetDetailID adds the detailId to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetDetailID(detailID string) {
	o.DetailID = detailID
}

// WithPosition adds the position to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithPosition(position *int32) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetPosition(position)
	return o
}

// SetPosition adds the position to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetPosition(position *int32) {
	o.Position = position
}

// WithQuestion adds the question to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WithQuestion(question *string) *PatchV1AudiencesAudienceIDDetailsDetailIDParams {
	o.SetQuestion(question)
	return o
}

// SetQuestion adds the question to the patch v1 audiences audience Id details detail Id params
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) SetQuestion(question *string) {
	o.Question = question
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1AudiencesAudienceIDDetailsDetailIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param audience_id
	if err := r.SetPathParam("audience_id", o.AudienceID); err != nil {
		return err
	}

	// path param detail_id
	if err := r.SetPathParam("detail_id", o.DetailID); err != nil {
		return err
	}

	if o.Position != nil {

		// form param position
		var frPosition int32
		if o.Position != nil {
			frPosition = *o.Position
		}
		fPosition := swag.FormatInt32(frPosition)
		if fPosition != "" {
			if err := r.SetFormParam("position", fPosition); err != nil {
				return err
			}
		}
	}

	if o.Question != nil {

		// form param question
		var frQuestion string
		if o.Question != nil {
			frQuestion = *o.Question
		}
		fQuestion := frQuestion
		if fQuestion != "" {
			if err := r.SetFormParam("question", fQuestion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
