// Code generated by go-swagger; DO NOT EDIT.

package audiences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutV1AudiencesMemberMemberIDDefaultParams creates a new PutV1AudiencesMemberMemberIDDefaultParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutV1AudiencesMemberMemberIDDefaultParams() *PutV1AudiencesMemberMemberIDDefaultParams {
	return &PutV1AudiencesMemberMemberIDDefaultParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1AudiencesMemberMemberIDDefaultParamsWithTimeout creates a new PutV1AudiencesMemberMemberIDDefaultParams object
// with the ability to set a timeout on a request.
func NewPutV1AudiencesMemberMemberIDDefaultParamsWithTimeout(timeout time.Duration) *PutV1AudiencesMemberMemberIDDefaultParams {
	return &PutV1AudiencesMemberMemberIDDefaultParams{
		timeout: timeout,
	}
}

// NewPutV1AudiencesMemberMemberIDDefaultParamsWithContext creates a new PutV1AudiencesMemberMemberIDDefaultParams object
// with the ability to set a context for a request.
func NewPutV1AudiencesMemberMemberIDDefaultParamsWithContext(ctx context.Context) *PutV1AudiencesMemberMemberIDDefaultParams {
	return &PutV1AudiencesMemberMemberIDDefaultParams{
		Context: ctx,
	}
}

// NewPutV1AudiencesMemberMemberIDDefaultParamsWithHTTPClient creates a new PutV1AudiencesMemberMemberIDDefaultParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutV1AudiencesMemberMemberIDDefaultParamsWithHTTPClient(client *http.Client) *PutV1AudiencesMemberMemberIDDefaultParams {
	return &PutV1AudiencesMemberMemberIDDefaultParams{
		HTTPClient: client,
	}
}

/*
PutV1AudiencesMemberMemberIDDefaultParams contains all the parameters to send to the API endpoint

	for the put v1 audiences member member Id default operation.

	Typically these are written to a http.Request.
*/
type PutV1AudiencesMemberMemberIDDefaultParams struct {

	/* AudienceID.

	   ID of the audience to set as default
	*/
	AudienceID string

	// MemberID.
	//
	// Format: int32
	MemberID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put v1 audiences member member Id default params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WithDefaults() *PutV1AudiencesMemberMemberIDDefaultParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put v1 audiences member member Id default params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutV1AudiencesMemberMemberIDDefaultParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WithTimeout(timeout time.Duration) *PutV1AudiencesMemberMemberIDDefaultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WithContext(ctx context.Context) *PutV1AudiencesMemberMemberIDDefaultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WithHTTPClient(client *http.Client) *PutV1AudiencesMemberMemberIDDefaultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAudienceID adds the audienceID to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WithAudienceID(audienceID string) *PutV1AudiencesMemberMemberIDDefaultParams {
	o.SetAudienceID(audienceID)
	return o
}

// SetAudienceID adds the audienceId to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) SetAudienceID(audienceID string) {
	o.AudienceID = audienceID
}

// WithMemberID adds the memberID to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WithMemberID(memberID int32) *PutV1AudiencesMemberMemberIDDefaultParams {
	o.SetMemberID(memberID)
	return o
}

// SetMemberID adds the memberId to the put v1 audiences member member Id default params
func (o *PutV1AudiencesMemberMemberIDDefaultParams) SetMemberID(memberID int32) {
	o.MemberID = memberID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1AudiencesMemberMemberIDDefaultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param audience_id
	frAudienceID := o.AudienceID
	fAudienceID := frAudienceID
	if fAudienceID != "" {
		if err := r.SetFormParam("audience_id", fAudienceID); err != nil {
			return err
		}
	}

	// path param member_id
	if err := r.SetPathParam("member_id", swag.FormatInt32(o.MemberID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
