// Code generated by go-swagger; DO NOT EDIT.

package retrospectives

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewShareIncidentRetrospectivesParams creates a new ShareIncidentRetrospectivesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewShareIncidentRetrospectivesParams() *ShareIncidentRetrospectivesParams {
	return &ShareIncidentRetrospectivesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewShareIncidentRetrospectivesParamsWithTimeout creates a new ShareIncidentRetrospectivesParams object
// with the ability to set a timeout on a request.
func NewShareIncidentRetrospectivesParamsWithTimeout(timeout time.Duration) *ShareIncidentRetrospectivesParams {
	return &ShareIncidentRetrospectivesParams{
		timeout: timeout,
	}
}

// NewShareIncidentRetrospectivesParamsWithContext creates a new ShareIncidentRetrospectivesParams object
// with the ability to set a context for a request.
func NewShareIncidentRetrospectivesParamsWithContext(ctx context.Context) *ShareIncidentRetrospectivesParams {
	return &ShareIncidentRetrospectivesParams{
		Context: ctx,
	}
}

// NewShareIncidentRetrospectivesParamsWithHTTPClient creates a new ShareIncidentRetrospectivesParams object
// with the ability to set a custom HTTPClient for a request.
func NewShareIncidentRetrospectivesParamsWithHTTPClient(client *http.Client) *ShareIncidentRetrospectivesParams {
	return &ShareIncidentRetrospectivesParams{
		HTTPClient: client,
	}
}

/*
ShareIncidentRetrospectivesParams contains all the parameters to send to the API endpoint

	for the share incident retrospectives operation.

	Typically these are written to a http.Request.
*/
type ShareIncidentRetrospectivesParams struct {

	// IncidentID.
	IncidentID string

	/* RetrospectiveIds.

	   An array of retrospective IDs to share
	*/
	RetrospectiveIds []string

	/* TeamIds.

	   An array of team IDs with whom to share the report
	*/
	TeamIds []string

	/* UserIds.

	   An array of user IDs with whom to share the report
	*/
	UserIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the share incident retrospectives params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ShareIncidentRetrospectivesParams) WithDefaults() *ShareIncidentRetrospectivesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the share incident retrospectives params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ShareIncidentRetrospectivesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithTimeout(timeout time.Duration) *ShareIncidentRetrospectivesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithContext(ctx context.Context) *ShareIncidentRetrospectivesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithHTTPClient(client *http.Client) *ShareIncidentRetrospectivesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncidentID adds the incidentID to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithIncidentID(incidentID string) *ShareIncidentRetrospectivesParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithRetrospectiveIds adds the retrospectiveIds to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithRetrospectiveIds(retrospectiveIds []string) *ShareIncidentRetrospectivesParams {
	o.SetRetrospectiveIds(retrospectiveIds)
	return o
}

// SetRetrospectiveIds adds the retrospectiveIds to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetRetrospectiveIds(retrospectiveIds []string) {
	o.RetrospectiveIds = retrospectiveIds
}

// WithTeamIds adds the teamIds to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithTeamIds(teamIds []string) *ShareIncidentRetrospectivesParams {
	o.SetTeamIds(teamIds)
	return o
}

// SetTeamIds adds the teamIds to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetTeamIds(teamIds []string) {
	o.TeamIds = teamIds
}

// WithUserIds adds the userIds to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) WithUserIds(userIds []string) *ShareIncidentRetrospectivesParams {
	o.SetUserIds(userIds)
	return o
}

// SetUserIds adds the userIds to the share incident retrospectives params
func (o *ShareIncidentRetrospectivesParams) SetUserIds(userIds []string) {
	o.UserIds = userIds
}

// WriteToRequest writes these params to a swagger request
func (o *ShareIncidentRetrospectivesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	if o.RetrospectiveIds != nil {

		// binding items for retrospective_ids
		joinedRetrospectiveIds := o.bindParamRetrospectiveIds(reg)

		// form array param retrospective_ids
		if err := r.SetFormParam("retrospective_ids", joinedRetrospectiveIds...); err != nil {
			return err
		}
	}

	if o.TeamIds != nil {

		// binding items for team_ids
		joinedTeamIds := o.bindParamTeamIds(reg)

		// form array param team_ids
		if err := r.SetFormParam("team_ids", joinedTeamIds...); err != nil {
			return err
		}
	}

	if o.UserIds != nil {

		// binding items for user_ids
		joinedUserIds := o.bindParamUserIds(reg)

		// form array param user_ids
		if err := r.SetFormParam("user_ids", joinedUserIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamShareIncidentRetrospectives binds the parameter retrospective_ids
func (o *ShareIncidentRetrospectivesParams) bindParamRetrospectiveIds(formats strfmt.Registry) []string {
	retrospectiveIdsIR := o.RetrospectiveIds

	var retrospectiveIdsIC []string
	for _, retrospectiveIdsIIR := range retrospectiveIdsIR { // explode []string

		retrospectiveIdsIIV := retrospectiveIdsIIR // string as string
		retrospectiveIdsIC = append(retrospectiveIdsIC, retrospectiveIdsIIV)
	}

	// items.CollectionFormat: ""
	retrospectiveIdsIS := swag.JoinByFormat(retrospectiveIdsIC, "")

	return retrospectiveIdsIS
}

// bindParamShareIncidentRetrospectives binds the parameter team_ids
func (o *ShareIncidentRetrospectivesParams) bindParamTeamIds(formats strfmt.Registry) []string {
	teamIdsIR := o.TeamIds

	var teamIdsIC []string
	for _, teamIdsIIR := range teamIdsIR { // explode []string

		teamIdsIIV := teamIdsIIR // string as string
		teamIdsIC = append(teamIdsIC, teamIdsIIV)
	}

	// items.CollectionFormat: ""
	teamIdsIS := swag.JoinByFormat(teamIdsIC, "")

	return teamIdsIS
}

// bindParamShareIncidentRetrospectives binds the parameter user_ids
func (o *ShareIncidentRetrospectivesParams) bindParamUserIds(formats strfmt.Registry) []string {
	userIdsIR := o.UserIds

	var userIdsIC []string
	for _, userIdsIIR := range userIdsIR { // explode []string

		userIdsIIV := userIdsIIR // string as string
		userIdsIC = append(userIdsIC, userIdsIIV)
	}

	// items.CollectionFormat: ""
	userIdsIS := swag.JoinByFormat(userIdsIC, "")

	return userIdsIS
}
