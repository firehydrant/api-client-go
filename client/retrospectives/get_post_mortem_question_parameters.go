// Code generated by go-swagger; DO NOT EDIT.

package retrospectives

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPostMortemQuestionParams creates a new GetPostMortemQuestionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPostMortemQuestionParams() *GetPostMortemQuestionParams {
	return &GetPostMortemQuestionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPostMortemQuestionParamsWithTimeout creates a new GetPostMortemQuestionParams object
// with the ability to set a timeout on a request.
func NewGetPostMortemQuestionParamsWithTimeout(timeout time.Duration) *GetPostMortemQuestionParams {
	return &GetPostMortemQuestionParams{
		timeout: timeout,
	}
}

// NewGetPostMortemQuestionParamsWithContext creates a new GetPostMortemQuestionParams object
// with the ability to set a context for a request.
func NewGetPostMortemQuestionParamsWithContext(ctx context.Context) *GetPostMortemQuestionParams {
	return &GetPostMortemQuestionParams{
		Context: ctx,
	}
}

// NewGetPostMortemQuestionParamsWithHTTPClient creates a new GetPostMortemQuestionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPostMortemQuestionParamsWithHTTPClient(client *http.Client) *GetPostMortemQuestionParams {
	return &GetPostMortemQuestionParams{
		HTTPClient: client,
	}
}

/*
GetPostMortemQuestionParams contains all the parameters to send to the API endpoint

	for the get post mortem question operation.

	Typically these are written to a http.Request.
*/
type GetPostMortemQuestionParams struct {

	// QuestionID.
	QuestionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get post mortem question params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPostMortemQuestionParams) WithDefaults() *GetPostMortemQuestionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get post mortem question params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPostMortemQuestionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get post mortem question params
func (o *GetPostMortemQuestionParams) WithTimeout(timeout time.Duration) *GetPostMortemQuestionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get post mortem question params
func (o *GetPostMortemQuestionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get post mortem question params
func (o *GetPostMortemQuestionParams) WithContext(ctx context.Context) *GetPostMortemQuestionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get post mortem question params
func (o *GetPostMortemQuestionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get post mortem question params
func (o *GetPostMortemQuestionParams) WithHTTPClient(client *http.Client) *GetPostMortemQuestionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get post mortem question params
func (o *GetPostMortemQuestionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQuestionID adds the questionID to the get post mortem question params
func (o *GetPostMortemQuestionParams) WithQuestionID(questionID string) *GetPostMortemQuestionParams {
	o.SetQuestionID(questionID)
	return o
}

// SetQuestionID adds the questionId to the get post mortem question params
func (o *GetPostMortemQuestionParams) SetQuestionID(questionID string) {
	o.QuestionID = questionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPostMortemQuestionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param question_id
	if err := r.SetPathParam("question_id", o.QuestionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
