// Code generated by go-swagger; DO NOT EDIT.

package retrospectives

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewPublishPostMortemReportParams creates a new PublishPostMortemReportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPublishPostMortemReportParams() *PublishPostMortemReportParams {
	return &PublishPostMortemReportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPublishPostMortemReportParamsWithTimeout creates a new PublishPostMortemReportParams object
// with the ability to set a timeout on a request.
func NewPublishPostMortemReportParamsWithTimeout(timeout time.Duration) *PublishPostMortemReportParams {
	return &PublishPostMortemReportParams{
		timeout: timeout,
	}
}

// NewPublishPostMortemReportParamsWithContext creates a new PublishPostMortemReportParams object
// with the ability to set a context for a request.
func NewPublishPostMortemReportParamsWithContext(ctx context.Context) *PublishPostMortemReportParams {
	return &PublishPostMortemReportParams{
		Context: ctx,
	}
}

// NewPublishPostMortemReportParamsWithHTTPClient creates a new PublishPostMortemReportParams object
// with the ability to set a custom HTTPClient for a request.
func NewPublishPostMortemReportParamsWithHTTPClient(client *http.Client) *PublishPostMortemReportParams {
	return &PublishPostMortemReportParams{
		HTTPClient: client,
	}
}

/*
PublishPostMortemReportParams contains all the parameters to send to the API endpoint

	for the publish post mortem report operation.

	Typically these are written to a http.Request.
*/
type PublishPostMortemReportParams struct {

	// PublishPostMortemReport.
	PublishPostMortemReport *models.PublishPostMortemReport

	// ReportID.
	ReportID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the publish post mortem report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PublishPostMortemReportParams) WithDefaults() *PublishPostMortemReportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the publish post mortem report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PublishPostMortemReportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the publish post mortem report params
func (o *PublishPostMortemReportParams) WithTimeout(timeout time.Duration) *PublishPostMortemReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the publish post mortem report params
func (o *PublishPostMortemReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the publish post mortem report params
func (o *PublishPostMortemReportParams) WithContext(ctx context.Context) *PublishPostMortemReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the publish post mortem report params
func (o *PublishPostMortemReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the publish post mortem report params
func (o *PublishPostMortemReportParams) WithHTTPClient(client *http.Client) *PublishPostMortemReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the publish post mortem report params
func (o *PublishPostMortemReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPublishPostMortemReport adds the publishPostMortemReport to the publish post mortem report params
func (o *PublishPostMortemReportParams) WithPublishPostMortemReport(publishPostMortemReport *models.PublishPostMortemReport) *PublishPostMortemReportParams {
	o.SetPublishPostMortemReport(publishPostMortemReport)
	return o
}

// SetPublishPostMortemReport adds the publishPostMortemReport to the publish post mortem report params
func (o *PublishPostMortemReportParams) SetPublishPostMortemReport(publishPostMortemReport *models.PublishPostMortemReport) {
	o.PublishPostMortemReport = publishPostMortemReport
}

// WithReportID adds the reportID to the publish post mortem report params
func (o *PublishPostMortemReportParams) WithReportID(reportID string) *PublishPostMortemReportParams {
	o.SetReportID(reportID)
	return o
}

// SetReportID adds the reportId to the publish post mortem report params
func (o *PublishPostMortemReportParams) SetReportID(reportID string) {
	o.ReportID = reportID
}

// WriteToRequest writes these params to a swagger request
func (o *PublishPostMortemReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.PublishPostMortemReport != nil {
		if err := r.SetBodyParam(o.PublishPostMortemReport); err != nil {
			return err
		}
	}

	// path param report_id
	if err := r.SetPathParam("report_id", o.ReportID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
