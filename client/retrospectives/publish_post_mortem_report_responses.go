// Code generated by go-swagger; DO NOT EDIT.

package retrospectives

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// PublishPostMortemReportReader is a Reader for the PublishPostMortemReport structure.
type PublishPostMortemReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublishPostMortemReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPublishPostMortemReportCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPublishPostMortemReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPublishPostMortemReportCreated creates a PublishPostMortemReportCreated with default headers values
func NewPublishPostMortemReportCreated() *PublishPostMortemReportCreated {
	return &PublishPostMortemReportCreated{}
}

/*
PublishPostMortemReportCreated describes a response with status code 201, with default header values.

Marks an incident retrospective as published and emails all of the participants in the report the summary
*/
type PublishPostMortemReportCreated struct {
	Payload *models.PostMortemsPostMortemReportEntity
}

// IsSuccess returns true when this publish post mortem report created response has a 2xx status code
func (o *PublishPostMortemReportCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this publish post mortem report created response has a 3xx status code
func (o *PublishPostMortemReportCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish post mortem report created response has a 4xx status code
func (o *PublishPostMortemReportCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this publish post mortem report created response has a 5xx status code
func (o *PublishPostMortemReportCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this publish post mortem report created response a status code equal to that given
func (o *PublishPostMortemReportCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PublishPostMortemReportCreated) Error() string {
	return fmt.Sprintf("[POST /v1/post_mortems/reports/{report_id}/publish][%d] publishPostMortemReportCreated  %+v", 201, o.Payload)
}

func (o *PublishPostMortemReportCreated) String() string {
	return fmt.Sprintf("[POST /v1/post_mortems/reports/{report_id}/publish][%d] publishPostMortemReportCreated  %+v", 201, o.Payload)
}

func (o *PublishPostMortemReportCreated) GetPayload() *models.PostMortemsPostMortemReportEntity {
	return o.Payload
}

func (o *PublishPostMortemReportCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostMortemsPostMortemReportEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishPostMortemReportBadRequest creates a PublishPostMortemReportBadRequest with default headers values
func NewPublishPostMortemReportBadRequest() *PublishPostMortemReportBadRequest {
	return &PublishPostMortemReportBadRequest{}
}

/*
PublishPostMortemReportBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PublishPostMortemReportBadRequest struct {
	Payload *models.ErrorEntity
}

// IsSuccess returns true when this publish post mortem report bad request response has a 2xx status code
func (o *PublishPostMortemReportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish post mortem report bad request response has a 3xx status code
func (o *PublishPostMortemReportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish post mortem report bad request response has a 4xx status code
func (o *PublishPostMortemReportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this publish post mortem report bad request response has a 5xx status code
func (o *PublishPostMortemReportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this publish post mortem report bad request response a status code equal to that given
func (o *PublishPostMortemReportBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PublishPostMortemReportBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/post_mortems/reports/{report_id}/publish][%d] publishPostMortemReportBadRequest  %+v", 400, o.Payload)
}

func (o *PublishPostMortemReportBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/post_mortems/reports/{report_id}/publish][%d] publishPostMortemReportBadRequest  %+v", 400, o.Payload)
}

func (o *PublishPostMortemReportBadRequest) GetPayload() *models.ErrorEntity {
	return o.Payload
}

func (o *PublishPostMortemReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
