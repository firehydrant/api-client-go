// Code generated by go-swagger; DO NOT EDIT.

package changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateChangeParams creates a new UpdateChangeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateChangeParams() *UpdateChangeParams {
	return &UpdateChangeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateChangeParamsWithTimeout creates a new UpdateChangeParams object
// with the ability to set a timeout on a request.
func NewUpdateChangeParamsWithTimeout(timeout time.Duration) *UpdateChangeParams {
	return &UpdateChangeParams{
		timeout: timeout,
	}
}

// NewUpdateChangeParamsWithContext creates a new UpdateChangeParams object
// with the ability to set a context for a request.
func NewUpdateChangeParamsWithContext(ctx context.Context) *UpdateChangeParams {
	return &UpdateChangeParams{
		Context: ctx,
	}
}

// NewUpdateChangeParamsWithHTTPClient creates a new UpdateChangeParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateChangeParamsWithHTTPClient(client *http.Client) *UpdateChangeParams {
	return &UpdateChangeParams{
		HTTPClient: client,
	}
}

/*
UpdateChangeParams contains all the parameters to send to the API endpoint

	for the update change operation.

	Typically these are written to a http.Request.
*/
type UpdateChangeParams struct {

	// ChangeID.
	ChangeID string

	// UpdateChange.
	UpdateChange *models.UpdateChange

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update change params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateChangeParams) WithDefaults() *UpdateChangeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update change params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateChangeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update change params
func (o *UpdateChangeParams) WithTimeout(timeout time.Duration) *UpdateChangeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update change params
func (o *UpdateChangeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update change params
func (o *UpdateChangeParams) WithContext(ctx context.Context) *UpdateChangeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update change params
func (o *UpdateChangeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update change params
func (o *UpdateChangeParams) WithHTTPClient(client *http.Client) *UpdateChangeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update change params
func (o *UpdateChangeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChangeID adds the changeID to the update change params
func (o *UpdateChangeParams) WithChangeID(changeID string) *UpdateChangeParams {
	o.SetChangeID(changeID)
	return o
}

// SetChangeID adds the changeId to the update change params
func (o *UpdateChangeParams) SetChangeID(changeID string) {
	o.ChangeID = changeID
}

// WithUpdateChange adds the updateChange to the update change params
func (o *UpdateChangeParams) WithUpdateChange(updateChange *models.UpdateChange) *UpdateChangeParams {
	o.SetUpdateChange(updateChange)
	return o
}

// SetUpdateChange adds the updateChange to the update change params
func (o *UpdateChangeParams) SetUpdateChange(updateChange *models.UpdateChange) {
	o.UpdateChange = updateChange
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateChangeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param change_id
	if err := r.SetPathParam("change_id", o.ChangeID); err != nil {
		return err
	}
	if o.UpdateChange != nil {
		if err := r.SetBodyParam(o.UpdateChange); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
