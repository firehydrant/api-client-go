// Code generated by go-swagger; DO NOT EDIT.

package changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// UpdateChangeIdentityReader is a Reader for the UpdateChangeIdentity structure.
type UpdateChangeIdentityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateChangeIdentityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateChangeIdentityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateChangeIdentityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateChangeIdentityOK creates a UpdateChangeIdentityOK with default headers values
func NewUpdateChangeIdentityOK() *UpdateChangeIdentityOK {
	return &UpdateChangeIdentityOK{}
}

/*
UpdateChangeIdentityOK describes a response with status code 200, with default header values.

Update an identity for the change entry
*/
type UpdateChangeIdentityOK struct {
	Payload *models.ChangeIdentityEntity
}

// IsSuccess returns true when this update change identity o k response has a 2xx status code
func (o *UpdateChangeIdentityOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update change identity o k response has a 3xx status code
func (o *UpdateChangeIdentityOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update change identity o k response has a 4xx status code
func (o *UpdateChangeIdentityOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update change identity o k response has a 5xx status code
func (o *UpdateChangeIdentityOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update change identity o k response a status code equal to that given
func (o *UpdateChangeIdentityOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateChangeIdentityOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/changes/{change_id}/identities/{identity_id}][%d] updateChangeIdentityOK  %+v", 200, o.Payload)
}

func (o *UpdateChangeIdentityOK) String() string {
	return fmt.Sprintf("[PATCH /v1/changes/{change_id}/identities/{identity_id}][%d] updateChangeIdentityOK  %+v", 200, o.Payload)
}

func (o *UpdateChangeIdentityOK) GetPayload() *models.ChangeIdentityEntity {
	return o.Payload
}

func (o *UpdateChangeIdentityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChangeIdentityEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateChangeIdentityBadRequest creates a UpdateChangeIdentityBadRequest with default headers values
func NewUpdateChangeIdentityBadRequest() *UpdateChangeIdentityBadRequest {
	return &UpdateChangeIdentityBadRequest{}
}

/*
UpdateChangeIdentityBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateChangeIdentityBadRequest struct {
	Payload *models.ErrorEntity
}

// IsSuccess returns true when this update change identity bad request response has a 2xx status code
func (o *UpdateChangeIdentityBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update change identity bad request response has a 3xx status code
func (o *UpdateChangeIdentityBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update change identity bad request response has a 4xx status code
func (o *UpdateChangeIdentityBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update change identity bad request response has a 5xx status code
func (o *UpdateChangeIdentityBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update change identity bad request response a status code equal to that given
func (o *UpdateChangeIdentityBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateChangeIdentityBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/changes/{change_id}/identities/{identity_id}][%d] updateChangeIdentityBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateChangeIdentityBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/changes/{change_id}/identities/{identity_id}][%d] updateChangeIdentityBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateChangeIdentityBadRequest) GetPayload() *models.ErrorEntity {
	return o.Payload
}

func (o *UpdateChangeIdentityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
