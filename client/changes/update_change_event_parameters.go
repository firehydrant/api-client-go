// Code generated by go-swagger; DO NOT EDIT.

package changes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateChangeEventParams creates a new UpdateChangeEventParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateChangeEventParams() *UpdateChangeEventParams {
	return &UpdateChangeEventParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateChangeEventParamsWithTimeout creates a new UpdateChangeEventParams object
// with the ability to set a timeout on a request.
func NewUpdateChangeEventParamsWithTimeout(timeout time.Duration) *UpdateChangeEventParams {
	return &UpdateChangeEventParams{
		timeout: timeout,
	}
}

// NewUpdateChangeEventParamsWithContext creates a new UpdateChangeEventParams object
// with the ability to set a context for a request.
func NewUpdateChangeEventParamsWithContext(ctx context.Context) *UpdateChangeEventParams {
	return &UpdateChangeEventParams{
		Context: ctx,
	}
}

// NewUpdateChangeEventParamsWithHTTPClient creates a new UpdateChangeEventParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateChangeEventParamsWithHTTPClient(client *http.Client) *UpdateChangeEventParams {
	return &UpdateChangeEventParams{
		HTTPClient: client,
	}
}

/*
UpdateChangeEventParams contains all the parameters to send to the API endpoint

	for the update change event operation.

	Typically these are written to a http.Request.
*/
type UpdateChangeEventParams struct {

	// ChangeEventID.
	ChangeEventID string

	// UpdateChangeEvent.
	UpdateChangeEvent *models.UpdateChangeEvent

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update change event params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateChangeEventParams) WithDefaults() *UpdateChangeEventParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update change event params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateChangeEventParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update change event params
func (o *UpdateChangeEventParams) WithTimeout(timeout time.Duration) *UpdateChangeEventParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update change event params
func (o *UpdateChangeEventParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update change event params
func (o *UpdateChangeEventParams) WithContext(ctx context.Context) *UpdateChangeEventParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update change event params
func (o *UpdateChangeEventParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update change event params
func (o *UpdateChangeEventParams) WithHTTPClient(client *http.Client) *UpdateChangeEventParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update change event params
func (o *UpdateChangeEventParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChangeEventID adds the changeEventID to the update change event params
func (o *UpdateChangeEventParams) WithChangeEventID(changeEventID string) *UpdateChangeEventParams {
	o.SetChangeEventID(changeEventID)
	return o
}

// SetChangeEventID adds the changeEventId to the update change event params
func (o *UpdateChangeEventParams) SetChangeEventID(changeEventID string) {
	o.ChangeEventID = changeEventID
}

// WithUpdateChangeEvent adds the updateChangeEvent to the update change event params
func (o *UpdateChangeEventParams) WithUpdateChangeEvent(updateChangeEvent *models.UpdateChangeEvent) *UpdateChangeEventParams {
	o.SetUpdateChangeEvent(updateChangeEvent)
	return o
}

// SetUpdateChangeEvent adds the updateChangeEvent to the update change event params
func (o *UpdateChangeEventParams) SetUpdateChangeEvent(updateChangeEvent *models.UpdateChangeEvent) {
	o.UpdateChangeEvent = updateChangeEvent
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateChangeEventParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param change_event_id
	if err := r.SetPathParam("change_event_id", o.ChangeEventID); err != nil {
		return err
	}
	if o.UpdateChangeEvent != nil {
		if err := r.SetBodyParam(o.UpdateChangeEvent); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
