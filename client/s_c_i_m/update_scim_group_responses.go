// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateScimGroupReader is a Reader for the UpdateScimGroup structure.
type UpdateScimGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateScimGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateScimGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateScimGroupOK creates a UpdateScimGroupOK with default headers values
func NewUpdateScimGroupOK() *UpdateScimGroupOK {
	return &UpdateScimGroupOK{}
}

/*
UpdateScimGroupOK describes a response with status code 200, with default header values.

SCIM endpoint to update a Team (Colloquial for Group in the SCIM protocol). Any members defined in the payload will be assigned to the team with no defined role, any missing members will be removed from the team.
*/
type UpdateScimGroupOK struct {
}

// IsSuccess returns true when this update scim group o k response has a 2xx status code
func (o *UpdateScimGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update scim group o k response has a 3xx status code
func (o *UpdateScimGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update scim group o k response has a 4xx status code
func (o *UpdateScimGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update scim group o k response has a 5xx status code
func (o *UpdateScimGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update scim group o k response a status code equal to that given
func (o *UpdateScimGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateScimGroupOK) Error() string {
	return fmt.Sprintf("[PUT /v1/scim/v2/Groups/{id}][%d] updateScimGroupOK ", 200)
}

func (o *UpdateScimGroupOK) String() string {
	return fmt.Sprintf("[PUT /v1/scim/v2/Groups/{id}][%d] updateScimGroupOK ", 200)
}

func (o *UpdateScimGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
