// Code generated by go-swagger; DO NOT EDIT.

package s_c_i_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewPatchScimUserParams creates a new PatchScimUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchScimUserParams() *PatchScimUserParams {
	return &PatchScimUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchScimUserParamsWithTimeout creates a new PatchScimUserParams object
// with the ability to set a timeout on a request.
func NewPatchScimUserParamsWithTimeout(timeout time.Duration) *PatchScimUserParams {
	return &PatchScimUserParams{
		timeout: timeout,
	}
}

// NewPatchScimUserParamsWithContext creates a new PatchScimUserParams object
// with the ability to set a context for a request.
func NewPatchScimUserParamsWithContext(ctx context.Context) *PatchScimUserParams {
	return &PatchScimUserParams{
		Context: ctx,
	}
}

// NewPatchScimUserParamsWithHTTPClient creates a new PatchScimUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchScimUserParamsWithHTTPClient(client *http.Client) *PatchScimUserParams {
	return &PatchScimUserParams{
		HTTPClient: client,
	}
}

/*
PatchScimUserParams contains all the parameters to send to the API endpoint

	for the patch scim user operation.

	Typically these are written to a http.Request.
*/
type PatchScimUserParams struct {

	// ID.
	ID string

	// PatchScimUser.
	PatchScimUser *models.PatchScimUser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch scim user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchScimUserParams) WithDefaults() *PatchScimUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch scim user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchScimUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch scim user params
func (o *PatchScimUserParams) WithTimeout(timeout time.Duration) *PatchScimUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch scim user params
func (o *PatchScimUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch scim user params
func (o *PatchScimUserParams) WithContext(ctx context.Context) *PatchScimUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch scim user params
func (o *PatchScimUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch scim user params
func (o *PatchScimUserParams) WithHTTPClient(client *http.Client) *PatchScimUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch scim user params
func (o *PatchScimUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the patch scim user params
func (o *PatchScimUserParams) WithID(id string) *PatchScimUserParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch scim user params
func (o *PatchScimUserParams) SetID(id string) {
	o.ID = id
}

// WithPatchScimUser adds the patchScimUser to the patch scim user params
func (o *PatchScimUserParams) WithPatchScimUser(patchScimUser *models.PatchScimUser) *PatchScimUserParams {
	o.SetPatchScimUser(patchScimUser)
	return o
}

// SetPatchScimUser adds the patchScimUser to the patch scim user params
func (o *PatchScimUserParams) SetPatchScimUser(patchScimUser *models.PatchScimUser) {
	o.PatchScimUser = patchScimUser
}

// WriteToRequest writes these params to a swagger request
func (o *PatchScimUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	if o.PatchScimUser != nil {
		if err := r.SetBodyParam(o.PatchScimUser); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
