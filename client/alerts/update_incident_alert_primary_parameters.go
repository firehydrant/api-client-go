// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateIncidentAlertPrimaryParams creates a new UpdateIncidentAlertPrimaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateIncidentAlertPrimaryParams() *UpdateIncidentAlertPrimaryParams {
	return &UpdateIncidentAlertPrimaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateIncidentAlertPrimaryParamsWithTimeout creates a new UpdateIncidentAlertPrimaryParams object
// with the ability to set a timeout on a request.
func NewUpdateIncidentAlertPrimaryParamsWithTimeout(timeout time.Duration) *UpdateIncidentAlertPrimaryParams {
	return &UpdateIncidentAlertPrimaryParams{
		timeout: timeout,
	}
}

// NewUpdateIncidentAlertPrimaryParamsWithContext creates a new UpdateIncidentAlertPrimaryParams object
// with the ability to set a context for a request.
func NewUpdateIncidentAlertPrimaryParamsWithContext(ctx context.Context) *UpdateIncidentAlertPrimaryParams {
	return &UpdateIncidentAlertPrimaryParams{
		Context: ctx,
	}
}

// NewUpdateIncidentAlertPrimaryParamsWithHTTPClient creates a new UpdateIncidentAlertPrimaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateIncidentAlertPrimaryParamsWithHTTPClient(client *http.Client) *UpdateIncidentAlertPrimaryParams {
	return &UpdateIncidentAlertPrimaryParams{
		HTTPClient: client,
	}
}

/*
UpdateIncidentAlertPrimaryParams contains all the parameters to send to the API endpoint

	for the update incident alert primary operation.

	Typically these are written to a http.Request.
*/
type UpdateIncidentAlertPrimaryParams struct {

	// IncidentAlertID.
	IncidentAlertID string

	// IncidentID.
	IncidentID string

	// UpdateIncidentAlertPrimary.
	UpdateIncidentAlertPrimary *models.UpdateIncidentAlertPrimary

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update incident alert primary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateIncidentAlertPrimaryParams) WithDefaults() *UpdateIncidentAlertPrimaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update incident alert primary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateIncidentAlertPrimaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) WithTimeout(timeout time.Duration) *UpdateIncidentAlertPrimaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) WithContext(ctx context.Context) *UpdateIncidentAlertPrimaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) WithHTTPClient(client *http.Client) *UpdateIncidentAlertPrimaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncidentAlertID adds the incidentAlertID to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) WithIncidentAlertID(incidentAlertID string) *UpdateIncidentAlertPrimaryParams {
	o.SetIncidentAlertID(incidentAlertID)
	return o
}

// SetIncidentAlertID adds the incidentAlertId to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) SetIncidentAlertID(incidentAlertID string) {
	o.IncidentAlertID = incidentAlertID
}

// WithIncidentID adds the incidentID to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) WithIncidentID(incidentID string) *UpdateIncidentAlertPrimaryParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithUpdateIncidentAlertPrimary adds the updateIncidentAlertPrimary to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) WithUpdateIncidentAlertPrimary(updateIncidentAlertPrimary *models.UpdateIncidentAlertPrimary) *UpdateIncidentAlertPrimaryParams {
	o.SetUpdateIncidentAlertPrimary(updateIncidentAlertPrimary)
	return o
}

// SetUpdateIncidentAlertPrimary adds the updateIncidentAlertPrimary to the update incident alert primary params
func (o *UpdateIncidentAlertPrimaryParams) SetUpdateIncidentAlertPrimary(updateIncidentAlertPrimary *models.UpdateIncidentAlertPrimary) {
	o.UpdateIncidentAlertPrimary = updateIncidentAlertPrimary
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateIncidentAlertPrimaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param incident_alert_id
	if err := r.SetPathParam("incident_alert_id", o.IncidentAlertID); err != nil {
		return err
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}
	if o.UpdateIncidentAlertPrimary != nil {
		if err := r.SetBodyParam(o.UpdateIncidentAlertPrimary); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
