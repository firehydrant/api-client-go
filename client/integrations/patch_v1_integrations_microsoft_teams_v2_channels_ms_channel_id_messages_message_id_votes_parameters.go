// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams creates a new PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams() *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	return &PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParamsWithTimeout creates a new PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams object
// with the ability to set a timeout on a request.
func NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParamsWithTimeout(timeout time.Duration) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	return &PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams{
		timeout: timeout,
	}
}

// NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParamsWithContext creates a new PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams object
// with the ability to set a context for a request.
func NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParamsWithContext(ctx context.Context) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	return &PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams{
		Context: ctx,
	}
}

// NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParamsWithHTTPClient creates a new PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParamsWithHTTPClient(client *http.Client) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	return &PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams{
		HTTPClient: client,
	}
}

/*
PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams contains all the parameters to send to the API endpoint

	for the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes operation.

	Typically these are written to a http.Request.
*/
type PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams struct {

	// MessageID.
	MessageID string

	// MsChannelID.
	MsChannelID string

	// PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes.
	PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes *models.PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithDefaults() *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithTimeout(timeout time.Duration) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithContext(ctx context.Context) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithHTTPClient(client *http.Client) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMessageID adds the messageID to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithMessageID(messageID string) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetMessageID(messageID)
	return o
}

// SetMessageID adds the messageId to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetMessageID(messageID string) {
	o.MessageID = messageID
}

// WithMsChannelID adds the msChannelID to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithMsChannelID(msChannelID string) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetMsChannelID(msChannelID)
	return o
}

// SetMsChannelID adds the msChannelId to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetMsChannelID(msChannelID string) {
	o.MsChannelID = msChannelID
}

// WithPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes adds the patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WithPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes(patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes *models.PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams {
	o.SetPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes(patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes)
	return o
}

// SetPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes adds the patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIdMessagesMessageIdVotes to the patch v1 integrations microsoft teams v2 channels ms channel Id messages message Id votes params
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) SetPatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes(patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes *models.PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes) {
	o.PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes = patchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param message_id
	if err := r.SetPathParam("message_id", o.MessageID); err != nil {
		return err
	}

	// path param ms_channel_id
	if err := r.SetPathParam("ms_channel_id", o.MsChannelID); err != nil {
		return err
	}
	if o.PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes != nil {
		if err := r.SetBodyParam(o.PatchV1IntegrationsMicrosoftTeamsV2ChannelsMsChannelIDMessagesMessageIDVotes); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
