// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams creates a new PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams() *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	return &PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParamsWithTimeout creates a new PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams object
// with the ability to set a timeout on a request.
func NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParamsWithTimeout(timeout time.Duration) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	return &PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams{
		timeout: timeout,
	}
}

// NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParamsWithContext creates a new PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams object
// with the ability to set a context for a request.
func NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParamsWithContext(ctx context.Context) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	return &PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams{
		Context: ctx,
	}
}

// NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParamsWithHTTPClient creates a new PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParamsWithHTTPClient(client *http.Client) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	return &PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams{
		HTTPClient: client,
	}
}

/*
PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams contains all the parameters to send to the API endpoint

	for the patch v1 integrations authed providers integration slug connection Id authed provider Id operation.

	Typically these are written to a http.Request.
*/
type PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams struct {

	/* AuthedProviderID.

	   Authed provider ID
	*/
	AuthedProviderID string

	/* ConnectionID.

	   Connection ID
	*/
	ConnectionID string

	/* IntegrationDefault.

	   Set as the default integration for the account
	*/
	IntegrationDefault *bool

	/* IntegrationSlug.

	   Integration slug
	*/
	IntegrationSlug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch v1 integrations authed providers integration slug connection Id authed provider Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithDefaults() *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch v1 integrations authed providers integration slug connection Id authed provider Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithTimeout(timeout time.Duration) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithContext(ctx context.Context) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithHTTPClient(client *http.Client) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthedProviderID adds the authedProviderID to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithAuthedProviderID(authedProviderID string) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetAuthedProviderID(authedProviderID)
	return o
}

// SetAuthedProviderID adds the authedProviderId to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetAuthedProviderID(authedProviderID string) {
	o.AuthedProviderID = authedProviderID
}

// WithConnectionID adds the connectionID to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithConnectionID(connectionID string) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetConnectionID(connectionID string) {
	o.ConnectionID = connectionID
}

// WithIntegrationDefault adds the integrationDefault to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithIntegrationDefault(integrationDefault *bool) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetIntegrationDefault(integrationDefault)
	return o
}

// SetIntegrationDefault adds the integrationDefault to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetIntegrationDefault(integrationDefault *bool) {
	o.IntegrationDefault = integrationDefault
}

// WithIntegrationSlug adds the integrationSlug to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WithIntegrationSlug(integrationSlug string) *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams {
	o.SetIntegrationSlug(integrationSlug)
	return o
}

// SetIntegrationSlug adds the integrationSlug to the patch v1 integrations authed providers integration slug connection Id authed provider Id params
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) SetIntegrationSlug(integrationSlug string) {
	o.IntegrationSlug = integrationSlug
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1IntegrationsAuthedProvidersIntegrationSlugConnectionIDAuthedProviderIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param authed_provider_id
	if err := r.SetPathParam("authed_provider_id", o.AuthedProviderID); err != nil {
		return err
	}

	// path param connection_id
	if err := r.SetPathParam("connection_id", o.ConnectionID); err != nil {
		return err
	}

	if o.IntegrationDefault != nil {

		// form param integration_default
		var frIntegrationDefault bool
		if o.IntegrationDefault != nil {
			frIntegrationDefault = *o.IntegrationDefault
		}
		fIntegrationDefault := swag.FormatBool(frIntegrationDefault)
		if fIntegrationDefault != "" {
			if err := r.SetFormParam("integration_default", fIntegrationDefault); err != nil {
				return err
			}
		}
	}

	// path param integration_slug
	if err := r.SetPathParam("integration_slug", o.IntegrationSlug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
