// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetV1IntegrationsDataExportExportRequestsParams creates a new GetV1IntegrationsDataExportExportRequestsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1IntegrationsDataExportExportRequestsParams() *GetV1IntegrationsDataExportExportRequestsParams {
	return &GetV1IntegrationsDataExportExportRequestsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1IntegrationsDataExportExportRequestsParamsWithTimeout creates a new GetV1IntegrationsDataExportExportRequestsParams object
// with the ability to set a timeout on a request.
func NewGetV1IntegrationsDataExportExportRequestsParamsWithTimeout(timeout time.Duration) *GetV1IntegrationsDataExportExportRequestsParams {
	return &GetV1IntegrationsDataExportExportRequestsParams{
		timeout: timeout,
	}
}

// NewGetV1IntegrationsDataExportExportRequestsParamsWithContext creates a new GetV1IntegrationsDataExportExportRequestsParams object
// with the ability to set a context for a request.
func NewGetV1IntegrationsDataExportExportRequestsParamsWithContext(ctx context.Context) *GetV1IntegrationsDataExportExportRequestsParams {
	return &GetV1IntegrationsDataExportExportRequestsParams{
		Context: ctx,
	}
}

// NewGetV1IntegrationsDataExportExportRequestsParamsWithHTTPClient creates a new GetV1IntegrationsDataExportExportRequestsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1IntegrationsDataExportExportRequestsParamsWithHTTPClient(client *http.Client) *GetV1IntegrationsDataExportExportRequestsParams {
	return &GetV1IntegrationsDataExportExportRequestsParams{
		HTTPClient: client,
	}
}

/*
GetV1IntegrationsDataExportExportRequestsParams contains all the parameters to send to the API endpoint

	for the get v1 integrations data export export requests operation.

	Typically these are written to a http.Request.
*/
type GetV1IntegrationsDataExportExportRequestsParams struct {

	/* NewerThan.

	   Finds the records that have been created since the date passed in. A record is any change to any incident, which may include incidents created prior to the date passed in.

	   Format: date-time
	*/
	NewerThan *strfmt.DateTime

	// Page.
	//
	// Format: int32
	Page *int32

	// PerPage.
	//
	// Format: int32
	PerPage *int32

	/* Status.

	   Filters records based on report generation status.
	*/
	Status *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 integrations data export export requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithDefaults() *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 integrations data export export requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithTimeout(timeout time.Duration) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithContext(ctx context.Context) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithHTTPClient(client *http.Client) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNewerThan adds the newerThan to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithNewerThan(newerThan *strfmt.DateTime) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetNewerThan(newerThan)
	return o
}

// SetNewerThan adds the newerThan to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetNewerThan(newerThan *strfmt.DateTime) {
	o.NewerThan = newerThan
}

// WithPage adds the page to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithPage(page *int32) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetPage(page *int32) {
	o.Page = page
}

// WithPerPage adds the perPage to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithPerPage(perPage *int32) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetPerPage(perPage *int32) {
	o.PerPage = perPage
}

// WithStatus adds the status to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) WithStatus(status *string) *GetV1IntegrationsDataExportExportRequestsParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get v1 integrations data export export requests params
func (o *GetV1IntegrationsDataExportExportRequestsParams) SetStatus(status *string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1IntegrationsDataExportExportRequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.NewerThan != nil {

		// query param newer_than
		var qrNewerThan strfmt.DateTime

		if o.NewerThan != nil {
			qrNewerThan = *o.NewerThan
		}
		qNewerThan := qrNewerThan.String()
		if qNewerThan != "" {

			if err := r.SetQueryParam("newer_than", qNewerThan); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int32

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage int32

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt32(qrPerPage)
		if qPerPage != "" {

			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// query param status
		var qrStatus string

		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {

			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
