// Code generated by go-swagger; DO NOT EDIT.

package incident_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewUpdateLifecycleMilestoneParams creates a new UpdateLifecycleMilestoneParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateLifecycleMilestoneParams() *UpdateLifecycleMilestoneParams {
	return &UpdateLifecycleMilestoneParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateLifecycleMilestoneParamsWithTimeout creates a new UpdateLifecycleMilestoneParams object
// with the ability to set a timeout on a request.
func NewUpdateLifecycleMilestoneParamsWithTimeout(timeout time.Duration) *UpdateLifecycleMilestoneParams {
	return &UpdateLifecycleMilestoneParams{
		timeout: timeout,
	}
}

// NewUpdateLifecycleMilestoneParamsWithContext creates a new UpdateLifecycleMilestoneParams object
// with the ability to set a context for a request.
func NewUpdateLifecycleMilestoneParamsWithContext(ctx context.Context) *UpdateLifecycleMilestoneParams {
	return &UpdateLifecycleMilestoneParams{
		Context: ctx,
	}
}

// NewUpdateLifecycleMilestoneParamsWithHTTPClient creates a new UpdateLifecycleMilestoneParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateLifecycleMilestoneParamsWithHTTPClient(client *http.Client) *UpdateLifecycleMilestoneParams {
	return &UpdateLifecycleMilestoneParams{
		HTTPClient: client,
	}
}

/*
UpdateLifecycleMilestoneParams contains all the parameters to send to the API endpoint

	for the update lifecycle milestone operation.

	Typically these are written to a http.Request.
*/
type UpdateLifecycleMilestoneParams struct {

	/* AutoAssignTimestampOnCreate.

	   The setting for auto-assigning the milestone's timestamp during incident declaration
	*/
	AutoAssignTimestampOnCreate *string

	/* Description.

	   A long-form description of the milestone's purpose
	*/
	Description *string

	// MilestoneID.
	MilestoneID string

	/* Name.

	   The name of the milestone
	*/
	Name *string

	/* Position.

	   The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.

	   Format: int32
	*/
	Position *int32

	/* RequiredAtMilestoneID.

	   The ID of a later milestone that cannot be started until this milestone has a timestamp populated
	*/
	RequiredAtMilestoneID *string

	/* Slug.

	   A unique identifier for the milestone. If not provided, one will be generated from the name.
	*/
	Slug *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update lifecycle milestone params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateLifecycleMilestoneParams) WithDefaults() *UpdateLifecycleMilestoneParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update lifecycle milestone params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateLifecycleMilestoneParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithTimeout(timeout time.Duration) *UpdateLifecycleMilestoneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithContext(ctx context.Context) *UpdateLifecycleMilestoneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithHTTPClient(client *http.Client) *UpdateLifecycleMilestoneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAutoAssignTimestampOnCreate adds the autoAssignTimestampOnCreate to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithAutoAssignTimestampOnCreate(autoAssignTimestampOnCreate *string) *UpdateLifecycleMilestoneParams {
	o.SetAutoAssignTimestampOnCreate(autoAssignTimestampOnCreate)
	return o
}

// SetAutoAssignTimestampOnCreate adds the autoAssignTimestampOnCreate to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetAutoAssignTimestampOnCreate(autoAssignTimestampOnCreate *string) {
	o.AutoAssignTimestampOnCreate = autoAssignTimestampOnCreate
}

// WithDescription adds the description to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithDescription(description *string) *UpdateLifecycleMilestoneParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetDescription(description *string) {
	o.Description = description
}

// WithMilestoneID adds the milestoneID to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithMilestoneID(milestoneID string) *UpdateLifecycleMilestoneParams {
	o.SetMilestoneID(milestoneID)
	return o
}

// SetMilestoneID adds the milestoneId to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetMilestoneID(milestoneID string) {
	o.MilestoneID = milestoneID
}

// WithName adds the name to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithName(name *string) *UpdateLifecycleMilestoneParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetName(name *string) {
	o.Name = name
}

// WithPosition adds the position to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithPosition(position *int32) *UpdateLifecycleMilestoneParams {
	o.SetPosition(position)
	return o
}

// SetPosition adds the position to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetPosition(position *int32) {
	o.Position = position
}

// WithRequiredAtMilestoneID adds the requiredAtMilestoneID to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithRequiredAtMilestoneID(requiredAtMilestoneID *string) *UpdateLifecycleMilestoneParams {
	o.SetRequiredAtMilestoneID(requiredAtMilestoneID)
	return o
}

// SetRequiredAtMilestoneID adds the requiredAtMilestoneId to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetRequiredAtMilestoneID(requiredAtMilestoneID *string) {
	o.RequiredAtMilestoneID = requiredAtMilestoneID
}

// WithSlug adds the slug to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) WithSlug(slug *string) *UpdateLifecycleMilestoneParams {
	o.SetSlug(slug)
	return o
}

// SetSlug adds the slug to the update lifecycle milestone params
func (o *UpdateLifecycleMilestoneParams) SetSlug(slug *string) {
	o.Slug = slug
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateLifecycleMilestoneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AutoAssignTimestampOnCreate != nil {

		// form param auto_assign_timestamp_on_create
		var frAutoAssignTimestampOnCreate string
		if o.AutoAssignTimestampOnCreate != nil {
			frAutoAssignTimestampOnCreate = *o.AutoAssignTimestampOnCreate
		}
		fAutoAssignTimestampOnCreate := frAutoAssignTimestampOnCreate
		if fAutoAssignTimestampOnCreate != "" {
			if err := r.SetFormParam("auto_assign_timestamp_on_create", fAutoAssignTimestampOnCreate); err != nil {
				return err
			}
		}
	}

	if o.Description != nil {

		// form param description
		var frDescription string
		if o.Description != nil {
			frDescription = *o.Description
		}
		fDescription := frDescription
		if fDescription != "" {
			if err := r.SetFormParam("description", fDescription); err != nil {
				return err
			}
		}
	}

	// path param milestone_id
	if err := r.SetPathParam("milestone_id", o.MilestoneID); err != nil {
		return err
	}

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}
	}

	if o.Position != nil {

		// form param position
		var frPosition int32
		if o.Position != nil {
			frPosition = *o.Position
		}
		fPosition := swag.FormatInt32(frPosition)
		if fPosition != "" {
			if err := r.SetFormParam("position", fPosition); err != nil {
				return err
			}
		}
	}

	if o.RequiredAtMilestoneID != nil {

		// form param required_at_milestone_id
		var frRequiredAtMilestoneID string
		if o.RequiredAtMilestoneID != nil {
			frRequiredAtMilestoneID = *o.RequiredAtMilestoneID
		}
		fRequiredAtMilestoneID := frRequiredAtMilestoneID
		if fRequiredAtMilestoneID != "" {
			if err := r.SetFormParam("required_at_milestone_id", fRequiredAtMilestoneID); err != nil {
				return err
			}
		}
	}

	if o.Slug != nil {

		// form param slug
		var frSlug string
		if o.Slug != nil {
			frSlug = *o.Slug
		}
		fSlug := frSlug
		if fSlug != "" {
			if err := r.SetFormParam("slug", fSlug); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
