// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// PostV1IncidentsIncidentIDImpactTypeReader is a Reader for the PostV1IncidentsIncidentIDImpactType structure.
type PostV1IncidentsIncidentIDImpactTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1IncidentsIncidentIDImpactTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1IncidentsIncidentIDImpactTypeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1IncidentsIncidentIDImpactTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/incidents/{incident_id}/impact/{type}] postV1IncidentsIncidentIdImpactType", response, response.Code())
	}
}

// NewPostV1IncidentsIncidentIDImpactTypeCreated creates a PostV1IncidentsIncidentIDImpactTypeCreated with default headers values
func NewPostV1IncidentsIncidentIDImpactTypeCreated() *PostV1IncidentsIncidentIDImpactTypeCreated {
	return &PostV1IncidentsIncidentIDImpactTypeCreated{}
}

/*
PostV1IncidentsIncidentIDImpactTypeCreated describes a response with status code 201, with default header values.

Add impacted infrastructure to an incident
*/
type PostV1IncidentsIncidentIDImpactTypeCreated struct {
	Payload *models.IncidentImpactEntity
}

// IsSuccess returns true when this post v1 incidents incident Id impact type created response has a 2xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 incidents incident Id impact type created response has a 3xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 incidents incident Id impact type created response has a 4xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 incidents incident Id impact type created response has a 5xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 incidents incident Id impact type created response a status code equal to that given
func (o *PostV1IncidentsIncidentIDImpactTypeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 incidents incident Id impact type created response
func (o *PostV1IncidentsIncidentIDImpactTypeCreated) Code() int {
	return 201
}

func (o *PostV1IncidentsIncidentIDImpactTypeCreated) Error() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/impact/{type}][%d] postV1IncidentsIncidentIdImpactTypeCreated  %+v", 201, o.Payload)
}

func (o *PostV1IncidentsIncidentIDImpactTypeCreated) String() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/impact/{type}][%d] postV1IncidentsIncidentIdImpactTypeCreated  %+v", 201, o.Payload)
}

func (o *PostV1IncidentsIncidentIDImpactTypeCreated) GetPayload() *models.IncidentImpactEntity {
	return o.Payload
}

func (o *PostV1IncidentsIncidentIDImpactTypeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IncidentImpactEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1IncidentsIncidentIDImpactTypeBadRequest creates a PostV1IncidentsIncidentIDImpactTypeBadRequest with default headers values
func NewPostV1IncidentsIncidentIDImpactTypeBadRequest() *PostV1IncidentsIncidentIDImpactTypeBadRequest {
	return &PostV1IncidentsIncidentIDImpactTypeBadRequest{}
}

/*
PostV1IncidentsIncidentIDImpactTypeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1IncidentsIncidentIDImpactTypeBadRequest struct {
	Payload *models.ErrorEntity
}

// IsSuccess returns true when this post v1 incidents incident Id impact type bad request response has a 2xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 incidents incident Id impact type bad request response has a 3xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 incidents incident Id impact type bad request response has a 4xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 incidents incident Id impact type bad request response has a 5xx status code
func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 incidents incident Id impact type bad request response a status code equal to that given
func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 incidents incident Id impact type bad request response
func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) Code() int {
	return 400
}

func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/impact/{type}][%d] postV1IncidentsIncidentIdImpactTypeBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/impact/{type}][%d] postV1IncidentsIncidentIdImpactTypeBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) GetPayload() *models.ErrorEntity {
	return o.Payload
}

func (o *PostV1IncidentsIncidentIDImpactTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
