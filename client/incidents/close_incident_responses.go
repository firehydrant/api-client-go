// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// CloseIncidentReader is a Reader for the CloseIncident structure.
type CloseIncidentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloseIncidentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloseIncidentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloseIncidentOK creates a CloseIncidentOK with default headers values
func NewCloseIncidentOK() *CloseIncidentOK {
	return &CloseIncidentOK{}
}

/*
CloseIncidentOK describes a response with status code 200, with default header values.

Closes an incident and optionally close all children
*/
type CloseIncidentOK struct {
	Payload *models.IncidentEntity
}

// IsSuccess returns true when this close incident o k response has a 2xx status code
func (o *CloseIncidentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this close incident o k response has a 3xx status code
func (o *CloseIncidentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this close incident o k response has a 4xx status code
func (o *CloseIncidentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this close incident o k response has a 5xx status code
func (o *CloseIncidentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this close incident o k response a status code equal to that given
func (o *CloseIncidentOK) IsCode(code int) bool {
	return code == 200
}

func (o *CloseIncidentOK) Error() string {
	return fmt.Sprintf("[PUT /v1/incidents/{incident_id}/close][%d] closeIncidentOK  %+v", 200, o.Payload)
}

func (o *CloseIncidentOK) String() string {
	return fmt.Sprintf("[PUT /v1/incidents/{incident_id}/close][%d] closeIncidentOK  %+v", 200, o.Payload)
}

func (o *CloseIncidentOK) GetPayload() *models.IncidentEntity {
	return o.Payload
}

func (o *CloseIncidentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IncidentEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
