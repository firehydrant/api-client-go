// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateIncidentAttachmentParams creates a new CreateIncidentAttachmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateIncidentAttachmentParams() *CreateIncidentAttachmentParams {
	return &CreateIncidentAttachmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateIncidentAttachmentParamsWithTimeout creates a new CreateIncidentAttachmentParams object
// with the ability to set a timeout on a request.
func NewCreateIncidentAttachmentParamsWithTimeout(timeout time.Duration) *CreateIncidentAttachmentParams {
	return &CreateIncidentAttachmentParams{
		timeout: timeout,
	}
}

// NewCreateIncidentAttachmentParamsWithContext creates a new CreateIncidentAttachmentParams object
// with the ability to set a context for a request.
func NewCreateIncidentAttachmentParamsWithContext(ctx context.Context) *CreateIncidentAttachmentParams {
	return &CreateIncidentAttachmentParams{
		Context: ctx,
	}
}

// NewCreateIncidentAttachmentParamsWithHTTPClient creates a new CreateIncidentAttachmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateIncidentAttachmentParamsWithHTTPClient(client *http.Client) *CreateIncidentAttachmentParams {
	return &CreateIncidentAttachmentParams{
		HTTPClient: client,
	}
}

/*
CreateIncidentAttachmentParams contains all the parameters to send to the API endpoint

	for the create incident attachment operation.

	Typically these are written to a http.Request.
*/
type CreateIncidentAttachmentParams struct {

	// Description.
	Description *string

	// File.
	File runtime.NamedReadCloser

	// IncidentID.
	IncidentID string

	// OccurredAt.
	//
	// Format: date-time
	OccurredAt *strfmt.DateTime

	// VoteDirection.
	VoteDirection *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create incident attachment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateIncidentAttachmentParams) WithDefaults() *CreateIncidentAttachmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create incident attachment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateIncidentAttachmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithTimeout(timeout time.Duration) *CreateIncidentAttachmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithContext(ctx context.Context) *CreateIncidentAttachmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithHTTPClient(client *http.Client) *CreateIncidentAttachmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDescription adds the description to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithDescription(description *string) *CreateIncidentAttachmentParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetDescription(description *string) {
	o.Description = description
}

// WithFile adds the file to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithFile(file runtime.NamedReadCloser) *CreateIncidentAttachmentParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithIncidentID adds the incidentID to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithIncidentID(incidentID string) *CreateIncidentAttachmentParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithOccurredAt adds the occurredAt to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithOccurredAt(occurredAt *strfmt.DateTime) *CreateIncidentAttachmentParams {
	o.SetOccurredAt(occurredAt)
	return o
}

// SetOccurredAt adds the occurredAt to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetOccurredAt(occurredAt *strfmt.DateTime) {
	o.OccurredAt = occurredAt
}

// WithVoteDirection adds the voteDirection to the create incident attachment params
func (o *CreateIncidentAttachmentParams) WithVoteDirection(voteDirection *string) *CreateIncidentAttachmentParams {
	o.SetVoteDirection(voteDirection)
	return o
}

// SetVoteDirection adds the voteDirection to the create incident attachment params
func (o *CreateIncidentAttachmentParams) SetVoteDirection(voteDirection *string) {
	o.VoteDirection = voteDirection
}

// WriteToRequest writes these params to a swagger request
func (o *CreateIncidentAttachmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Description != nil {

		// form param description
		var frDescription string
		if o.Description != nil {
			frDescription = *o.Description
		}
		fDescription := frDescription
		if fDescription != "" {
			if err := r.SetFormParam("description", fDescription); err != nil {
				return err
			}
		}
	}
	// form file param file
	if err := r.SetFileParam("file", o.File); err != nil {
		return err
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	if o.OccurredAt != nil {

		// form param occurred_at
		var frOccurredAt strfmt.DateTime
		if o.OccurredAt != nil {
			frOccurredAt = *o.OccurredAt
		}
		fOccurredAt := frOccurredAt.String()
		if fOccurredAt != "" {
			if err := r.SetFormParam("occurred_at", fOccurredAt); err != nil {
				return err
			}
		}
	}

	if o.VoteDirection != nil {

		// form param vote_direction
		var frVoteDirection string
		if o.VoteDirection != nil {
			frVoteDirection = *o.VoteDirection
		}
		fVoteDirection := frVoteDirection
		if fVoteDirection != "" {
			if err := r.SetFormParam("vote_direction", fVoteDirection); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
