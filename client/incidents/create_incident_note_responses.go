// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// CreateIncidentNoteReader is a Reader for the CreateIncidentNote structure.
type CreateIncidentNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIncidentNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateIncidentNoteCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateIncidentNoteCreated creates a CreateIncidentNoteCreated with default headers values
func NewCreateIncidentNoteCreated() *CreateIncidentNoteCreated {
	return &CreateIncidentNoteCreated{}
}

/*
CreateIncidentNoteCreated describes a response with status code 201, with default header values.

Create a new note on for an incident. The visibility field on a note determines where it gets posted.
*/
type CreateIncidentNoteCreated struct {
	Payload *models.EventNoteEntity
}

// IsSuccess returns true when this create incident note created response has a 2xx status code
func (o *CreateIncidentNoteCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create incident note created response has a 3xx status code
func (o *CreateIncidentNoteCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create incident note created response has a 4xx status code
func (o *CreateIncidentNoteCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create incident note created response has a 5xx status code
func (o *CreateIncidentNoteCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create incident note created response a status code equal to that given
func (o *CreateIncidentNoteCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateIncidentNoteCreated) Error() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/notes][%d] createIncidentNoteCreated  %+v", 201, o.Payload)
}

func (o *CreateIncidentNoteCreated) String() string {
	return fmt.Sprintf("[POST /v1/incidents/{incident_id}/notes][%d] createIncidentNoteCreated  %+v", 201, o.Payload)
}

func (o *CreateIncidentNoteCreated) GetPayload() *models.EventNoteEntity {
	return o.Payload
}

func (o *CreateIncidentNoteCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EventNoteEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
