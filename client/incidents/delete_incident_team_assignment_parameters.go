// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteIncidentTeamAssignmentParams creates a new DeleteIncidentTeamAssignmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteIncidentTeamAssignmentParams() *DeleteIncidentTeamAssignmentParams {
	return &DeleteIncidentTeamAssignmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteIncidentTeamAssignmentParamsWithTimeout creates a new DeleteIncidentTeamAssignmentParams object
// with the ability to set a timeout on a request.
func NewDeleteIncidentTeamAssignmentParamsWithTimeout(timeout time.Duration) *DeleteIncidentTeamAssignmentParams {
	return &DeleteIncidentTeamAssignmentParams{
		timeout: timeout,
	}
}

// NewDeleteIncidentTeamAssignmentParamsWithContext creates a new DeleteIncidentTeamAssignmentParams object
// with the ability to set a context for a request.
func NewDeleteIncidentTeamAssignmentParamsWithContext(ctx context.Context) *DeleteIncidentTeamAssignmentParams {
	return &DeleteIncidentTeamAssignmentParams{
		Context: ctx,
	}
}

// NewDeleteIncidentTeamAssignmentParamsWithHTTPClient creates a new DeleteIncidentTeamAssignmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteIncidentTeamAssignmentParamsWithHTTPClient(client *http.Client) *DeleteIncidentTeamAssignmentParams {
	return &DeleteIncidentTeamAssignmentParams{
		HTTPClient: client,
	}
}

/*
DeleteIncidentTeamAssignmentParams contains all the parameters to send to the API endpoint

	for the delete incident team assignment operation.

	Typically these are written to a http.Request.
*/
type DeleteIncidentTeamAssignmentParams struct {

	// IncidentID.
	IncidentID string

	/* RoleAssignmentIds.

	   Team role assignments to unassign from the incident
	*/
	RoleAssignmentIds []string

	// TeamAssignmentID.
	TeamAssignmentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete incident team assignment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteIncidentTeamAssignmentParams) WithDefaults() *DeleteIncidentTeamAssignmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete incident team assignment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteIncidentTeamAssignmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) WithTimeout(timeout time.Duration) *DeleteIncidentTeamAssignmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) WithContext(ctx context.Context) *DeleteIncidentTeamAssignmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) WithHTTPClient(client *http.Client) *DeleteIncidentTeamAssignmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncidentID adds the incidentID to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) WithIncidentID(incidentID string) *DeleteIncidentTeamAssignmentParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithRoleAssignmentIds adds the roleAssignmentIds to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) WithRoleAssignmentIds(roleAssignmentIds []string) *DeleteIncidentTeamAssignmentParams {
	o.SetRoleAssignmentIds(roleAssignmentIds)
	return o
}

// SetRoleAssignmentIds adds the roleAssignmentIds to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) SetRoleAssignmentIds(roleAssignmentIds []string) {
	o.RoleAssignmentIds = roleAssignmentIds
}

// WithTeamAssignmentID adds the teamAssignmentID to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) WithTeamAssignmentID(teamAssignmentID string) *DeleteIncidentTeamAssignmentParams {
	o.SetTeamAssignmentID(teamAssignmentID)
	return o
}

// SetTeamAssignmentID adds the teamAssignmentId to the delete incident team assignment params
func (o *DeleteIncidentTeamAssignmentParams) SetTeamAssignmentID(teamAssignmentID string) {
	o.TeamAssignmentID = teamAssignmentID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteIncidentTeamAssignmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	if o.RoleAssignmentIds != nil {

		// binding items for role_assignment_ids
		joinedRoleAssignmentIds := o.bindParamRoleAssignmentIds(reg)

		// form array param role_assignment_ids
		if err := r.SetFormParam("role_assignment_ids", joinedRoleAssignmentIds...); err != nil {
			return err
		}
	}

	// path param team_assignment_id
	if err := r.SetPathParam("team_assignment_id", o.TeamAssignmentID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamDeleteIncidentTeamAssignment binds the parameter role_assignment_ids
func (o *DeleteIncidentTeamAssignmentParams) bindParamRoleAssignmentIds(formats strfmt.Registry) []string {
	roleAssignmentIdsIR := o.RoleAssignmentIds

	var roleAssignmentIdsIC []string
	for _, roleAssignmentIdsIIR := range roleAssignmentIdsIR { // explode []string

		roleAssignmentIdsIIV := roleAssignmentIdsIIR // string as string
		roleAssignmentIdsIC = append(roleAssignmentIdsIC, roleAssignmentIdsIIV)
	}

	// items.CollectionFormat: ""
	roleAssignmentIdsIS := swag.JoinByFormat(roleAssignmentIdsIC, "")

	return roleAssignmentIdsIS
}
