// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewCreateIncidentChangeEventParams creates a new CreateIncidentChangeEventParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateIncidentChangeEventParams() *CreateIncidentChangeEventParams {
	return &CreateIncidentChangeEventParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateIncidentChangeEventParamsWithTimeout creates a new CreateIncidentChangeEventParams object
// with the ability to set a timeout on a request.
func NewCreateIncidentChangeEventParamsWithTimeout(timeout time.Duration) *CreateIncidentChangeEventParams {
	return &CreateIncidentChangeEventParams{
		timeout: timeout,
	}
}

// NewCreateIncidentChangeEventParamsWithContext creates a new CreateIncidentChangeEventParams object
// with the ability to set a context for a request.
func NewCreateIncidentChangeEventParamsWithContext(ctx context.Context) *CreateIncidentChangeEventParams {
	return &CreateIncidentChangeEventParams{
		Context: ctx,
	}
}

// NewCreateIncidentChangeEventParamsWithHTTPClient creates a new CreateIncidentChangeEventParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateIncidentChangeEventParamsWithHTTPClient(client *http.Client) *CreateIncidentChangeEventParams {
	return &CreateIncidentChangeEventParams{
		HTTPClient: client,
	}
}

/*
CreateIncidentChangeEventParams contains all the parameters to send to the API endpoint

	for the create incident change event operation.

	Typically these are written to a http.Request.
*/
type CreateIncidentChangeEventParams struct {

	// CreateIncidentChangeEvent.
	CreateIncidentChangeEvent *models.CreateIncidentChangeEvent

	// IncidentID.
	IncidentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create incident change event params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateIncidentChangeEventParams) WithDefaults() *CreateIncidentChangeEventParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create incident change event params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateIncidentChangeEventParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create incident change event params
func (o *CreateIncidentChangeEventParams) WithTimeout(timeout time.Duration) *CreateIncidentChangeEventParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create incident change event params
func (o *CreateIncidentChangeEventParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create incident change event params
func (o *CreateIncidentChangeEventParams) WithContext(ctx context.Context) *CreateIncidentChangeEventParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create incident change event params
func (o *CreateIncidentChangeEventParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create incident change event params
func (o *CreateIncidentChangeEventParams) WithHTTPClient(client *http.Client) *CreateIncidentChangeEventParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create incident change event params
func (o *CreateIncidentChangeEventParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateIncidentChangeEvent adds the createIncidentChangeEvent to the create incident change event params
func (o *CreateIncidentChangeEventParams) WithCreateIncidentChangeEvent(createIncidentChangeEvent *models.CreateIncidentChangeEvent) *CreateIncidentChangeEventParams {
	o.SetCreateIncidentChangeEvent(createIncidentChangeEvent)
	return o
}

// SetCreateIncidentChangeEvent adds the createIncidentChangeEvent to the create incident change event params
func (o *CreateIncidentChangeEventParams) SetCreateIncidentChangeEvent(createIncidentChangeEvent *models.CreateIncidentChangeEvent) {
	o.CreateIncidentChangeEvent = createIncidentChangeEvent
}

// WithIncidentID adds the incidentID to the create incident change event params
func (o *CreateIncidentChangeEventParams) WithIncidentID(incidentID string) *CreateIncidentChangeEventParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the create incident change event params
func (o *CreateIncidentChangeEventParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateIncidentChangeEventParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CreateIncidentChangeEvent != nil {
		if err := r.SetBodyParam(o.CreateIncidentChangeEvent); err != nil {
			return err
		}
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
