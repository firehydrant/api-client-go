// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateIncidentLinkParams creates a new UpdateIncidentLinkParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateIncidentLinkParams() *UpdateIncidentLinkParams {
	return &UpdateIncidentLinkParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateIncidentLinkParamsWithTimeout creates a new UpdateIncidentLinkParams object
// with the ability to set a timeout on a request.
func NewUpdateIncidentLinkParamsWithTimeout(timeout time.Duration) *UpdateIncidentLinkParams {
	return &UpdateIncidentLinkParams{
		timeout: timeout,
	}
}

// NewUpdateIncidentLinkParamsWithContext creates a new UpdateIncidentLinkParams object
// with the ability to set a context for a request.
func NewUpdateIncidentLinkParamsWithContext(ctx context.Context) *UpdateIncidentLinkParams {
	return &UpdateIncidentLinkParams{
		Context: ctx,
	}
}

// NewUpdateIncidentLinkParamsWithHTTPClient creates a new UpdateIncidentLinkParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateIncidentLinkParamsWithHTTPClient(client *http.Client) *UpdateIncidentLinkParams {
	return &UpdateIncidentLinkParams{
		HTTPClient: client,
	}
}

/*
UpdateIncidentLinkParams contains all the parameters to send to the API endpoint

	for the update incident link operation.

	Typically these are written to a http.Request.
*/
type UpdateIncidentLinkParams struct {

	// IncidentID.
	IncidentID string

	// LinkID.
	LinkID string

	// UpdateIncidentLink.
	UpdateIncidentLink *models.UpdateIncidentLink

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update incident link params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateIncidentLinkParams) WithDefaults() *UpdateIncidentLinkParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update incident link params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateIncidentLinkParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update incident link params
func (o *UpdateIncidentLinkParams) WithTimeout(timeout time.Duration) *UpdateIncidentLinkParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update incident link params
func (o *UpdateIncidentLinkParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update incident link params
func (o *UpdateIncidentLinkParams) WithContext(ctx context.Context) *UpdateIncidentLinkParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update incident link params
func (o *UpdateIncidentLinkParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update incident link params
func (o *UpdateIncidentLinkParams) WithHTTPClient(client *http.Client) *UpdateIncidentLinkParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update incident link params
func (o *UpdateIncidentLinkParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncidentID adds the incidentID to the update incident link params
func (o *UpdateIncidentLinkParams) WithIncidentID(incidentID string) *UpdateIncidentLinkParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the update incident link params
func (o *UpdateIncidentLinkParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithLinkID adds the linkID to the update incident link params
func (o *UpdateIncidentLinkParams) WithLinkID(linkID string) *UpdateIncidentLinkParams {
	o.SetLinkID(linkID)
	return o
}

// SetLinkID adds the linkId to the update incident link params
func (o *UpdateIncidentLinkParams) SetLinkID(linkID string) {
	o.LinkID = linkID
}

// WithUpdateIncidentLink adds the updateIncidentLink to the update incident link params
func (o *UpdateIncidentLinkParams) WithUpdateIncidentLink(updateIncidentLink *models.UpdateIncidentLink) *UpdateIncidentLinkParams {
	o.SetUpdateIncidentLink(updateIncidentLink)
	return o
}

// SetUpdateIncidentLink adds the updateIncidentLink to the update incident link params
func (o *UpdateIncidentLinkParams) SetUpdateIncidentLink(updateIncidentLink *models.UpdateIncidentLink) {
	o.UpdateIncidentLink = updateIncidentLink
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateIncidentLinkParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}

	// path param link_id
	if err := r.SetPathParam("link_id", o.LinkID); err != nil {
		return err
	}
	if o.UpdateIncidentLink != nil {
		if err := r.SetBodyParam(o.UpdateIncidentLink); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
