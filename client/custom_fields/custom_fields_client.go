// Code generated by go-swagger; DO NOT EDIT.

package custom_fields

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new custom fields API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for custom fields API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteV1CustomFieldsDefinitionsFieldID(params *DeleteV1CustomFieldsDefinitionsFieldIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteV1CustomFieldsDefinitionsFieldIDOK, error)

	GetV1CustomFieldsDefinitions(params *GetV1CustomFieldsDefinitionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1CustomFieldsDefinitionsOK, error)

	GetV1CustomFieldsDefinitionsFieldIDSelectOptions(params *GetV1CustomFieldsDefinitionsFieldIDSelectOptionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1CustomFieldsDefinitionsFieldIDSelectOptionsOK, error)

	PatchV1CustomFieldsDefinitionsFieldID(params *PatchV1CustomFieldsDefinitionsFieldIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PatchV1CustomFieldsDefinitionsFieldIDOK, error)

	PostV1CustomFieldsDefinitions(params *PostV1CustomFieldsDefinitionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostV1CustomFieldsDefinitionsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
DeleteV1CustomFieldsDefinitionsFieldID deletes a custom field definition

Delete a custom field definition
*/
func (a *Client) DeleteV1CustomFieldsDefinitionsFieldID(params *DeleteV1CustomFieldsDefinitionsFieldIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteV1CustomFieldsDefinitionsFieldIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteV1CustomFieldsDefinitionsFieldIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteV1CustomFieldsDefinitionsFieldId",
		Method:             "DELETE",
		PathPattern:        "/v1/custom_fields/definitions/{field_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteV1CustomFieldsDefinitionsFieldIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteV1CustomFieldsDefinitionsFieldIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteV1CustomFieldsDefinitionsFieldId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1CustomFieldsDefinitions lists custom field definitions

List all custom field definitions
*/
func (a *Client) GetV1CustomFieldsDefinitions(params *GetV1CustomFieldsDefinitionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1CustomFieldsDefinitionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1CustomFieldsDefinitionsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getV1CustomFieldsDefinitions",
		Method:             "GET",
		PathPattern:        "/v1/custom_fields/definitions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1CustomFieldsDefinitionsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1CustomFieldsDefinitionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getV1CustomFieldsDefinitions: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1CustomFieldsDefinitionsFieldIDSelectOptions gets custom field permissible values

Get the permissible values for the a currently active custom select or multi-select field.
*/
func (a *Client) GetV1CustomFieldsDefinitionsFieldIDSelectOptions(params *GetV1CustomFieldsDefinitionsFieldIDSelectOptionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetV1CustomFieldsDefinitionsFieldIDSelectOptionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1CustomFieldsDefinitionsFieldIDSelectOptionsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getV1CustomFieldsDefinitionsFieldIdSelectOptions",
		Method:             "GET",
		PathPattern:        "/v1/custom_fields/definitions/{field_id}/select_options",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1CustomFieldsDefinitionsFieldIDSelectOptionsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1CustomFieldsDefinitionsFieldIDSelectOptionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getV1CustomFieldsDefinitionsFieldIdSelectOptions: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PatchV1CustomFieldsDefinitionsFieldID updates custom field definition

Update a single custom field definition
*/
func (a *Client) PatchV1CustomFieldsDefinitionsFieldID(params *PatchV1CustomFieldsDefinitionsFieldIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PatchV1CustomFieldsDefinitionsFieldIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchV1CustomFieldsDefinitionsFieldIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "patchV1CustomFieldsDefinitionsFieldId",
		Method:             "PATCH",
		PathPattern:        "/v1/custom_fields/definitions/{field_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchV1CustomFieldsDefinitionsFieldIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchV1CustomFieldsDefinitionsFieldIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for patchV1CustomFieldsDefinitionsFieldId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostV1CustomFieldsDefinitions creates custom field definition

Create a new custom field definition
*/
func (a *Client) PostV1CustomFieldsDefinitions(params *PostV1CustomFieldsDefinitionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostV1CustomFieldsDefinitionsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostV1CustomFieldsDefinitionsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postV1CustomFieldsDefinitions",
		Method:             "POST",
		PathPattern:        "/v1/custom_fields/definitions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostV1CustomFieldsDefinitionsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostV1CustomFieldsDefinitionsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postV1CustomFieldsDefinitions: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
