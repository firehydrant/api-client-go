// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteCommentReactionParams creates a new DeleteCommentReactionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteCommentReactionParams() *DeleteCommentReactionParams {
	return &DeleteCommentReactionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCommentReactionParamsWithTimeout creates a new DeleteCommentReactionParams object
// with the ability to set a timeout on a request.
func NewDeleteCommentReactionParamsWithTimeout(timeout time.Duration) *DeleteCommentReactionParams {
	return &DeleteCommentReactionParams{
		timeout: timeout,
	}
}

// NewDeleteCommentReactionParamsWithContext creates a new DeleteCommentReactionParams object
// with the ability to set a context for a request.
func NewDeleteCommentReactionParamsWithContext(ctx context.Context) *DeleteCommentReactionParams {
	return &DeleteCommentReactionParams{
		Context: ctx,
	}
}

// NewDeleteCommentReactionParamsWithHTTPClient creates a new DeleteCommentReactionParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteCommentReactionParamsWithHTTPClient(client *http.Client) *DeleteCommentReactionParams {
	return &DeleteCommentReactionParams{
		HTTPClient: client,
	}
}

/*
DeleteCommentReactionParams contains all the parameters to send to the API endpoint

	for the delete comment reaction operation.

	Typically these are written to a http.Request.
*/
type DeleteCommentReactionParams struct {

	// CommentID.
	CommentID string

	// ConversationID.
	ConversationID string

	// ReactionID.
	ReactionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete comment reaction params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCommentReactionParams) WithDefaults() *DeleteCommentReactionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete comment reaction params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteCommentReactionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete comment reaction params
func (o *DeleteCommentReactionParams) WithTimeout(timeout time.Duration) *DeleteCommentReactionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete comment reaction params
func (o *DeleteCommentReactionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete comment reaction params
func (o *DeleteCommentReactionParams) WithContext(ctx context.Context) *DeleteCommentReactionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete comment reaction params
func (o *DeleteCommentReactionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete comment reaction params
func (o *DeleteCommentReactionParams) WithHTTPClient(client *http.Client) *DeleteCommentReactionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete comment reaction params
func (o *DeleteCommentReactionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCommentID adds the commentID to the delete comment reaction params
func (o *DeleteCommentReactionParams) WithCommentID(commentID string) *DeleteCommentReactionParams {
	o.SetCommentID(commentID)
	return o
}

// SetCommentID adds the commentId to the delete comment reaction params
func (o *DeleteCommentReactionParams) SetCommentID(commentID string) {
	o.CommentID = commentID
}

// WithConversationID adds the conversationID to the delete comment reaction params
func (o *DeleteCommentReactionParams) WithConversationID(conversationID string) *DeleteCommentReactionParams {
	o.SetConversationID(conversationID)
	return o
}

// SetConversationID adds the conversationId to the delete comment reaction params
func (o *DeleteCommentReactionParams) SetConversationID(conversationID string) {
	o.ConversationID = conversationID
}

// WithReactionID adds the reactionID to the delete comment reaction params
func (o *DeleteCommentReactionParams) WithReactionID(reactionID string) *DeleteCommentReactionParams {
	o.SetReactionID(reactionID)
	return o
}

// SetReactionID adds the reactionId to the delete comment reaction params
func (o *DeleteCommentReactionParams) SetReactionID(reactionID string) {
	o.ReactionID = reactionID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCommentReactionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param comment_id
	if err := r.SetPathParam("comment_id", o.CommentID); err != nil {
		return err
	}

	// path param conversation_id
	if err := r.SetPathParam("conversation_id", o.ConversationID); err != nil {
		return err
	}

	// path param reaction_id
	if err := r.SetPathParam("reaction_id", o.ReactionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
