// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewPatchV1IncidentsIncidentIDEventsEventIDVotesParams creates a new PatchV1IncidentsIncidentIDEventsEventIDVotesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchV1IncidentsIncidentIDEventsEventIDVotesParams() *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	return &PatchV1IncidentsIncidentIDEventsEventIDVotesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1IncidentsIncidentIDEventsEventIDVotesParamsWithTimeout creates a new PatchV1IncidentsIncidentIDEventsEventIDVotesParams object
// with the ability to set a timeout on a request.
func NewPatchV1IncidentsIncidentIDEventsEventIDVotesParamsWithTimeout(timeout time.Duration) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	return &PatchV1IncidentsIncidentIDEventsEventIDVotesParams{
		timeout: timeout,
	}
}

// NewPatchV1IncidentsIncidentIDEventsEventIDVotesParamsWithContext creates a new PatchV1IncidentsIncidentIDEventsEventIDVotesParams object
// with the ability to set a context for a request.
func NewPatchV1IncidentsIncidentIDEventsEventIDVotesParamsWithContext(ctx context.Context) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	return &PatchV1IncidentsIncidentIDEventsEventIDVotesParams{
		Context: ctx,
	}
}

// NewPatchV1IncidentsIncidentIDEventsEventIDVotesParamsWithHTTPClient creates a new PatchV1IncidentsIncidentIDEventsEventIDVotesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchV1IncidentsIncidentIDEventsEventIDVotesParamsWithHTTPClient(client *http.Client) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	return &PatchV1IncidentsIncidentIDEventsEventIDVotesParams{
		HTTPClient: client,
	}
}

/*
PatchV1IncidentsIncidentIDEventsEventIDVotesParams contains all the parameters to send to the API endpoint

	for the patch v1 incidents incident Id events event Id votes operation.

	Typically these are written to a http.Request.
*/
type PatchV1IncidentsIncidentIDEventsEventIDVotesParams struct {

	// EventID.
	EventID string

	// IncidentID.
	IncidentID string

	// PatchV1IncidentsIncidentIDEventsEventIDVotes.
	PatchV1IncidentsIncidentIDEventsEventIDVotes *models.PatchV1IncidentsIncidentIDEventsEventIDVotes

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch v1 incidents incident Id events event Id votes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithDefaults() *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch v1 incidents incident Id events event Id votes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithTimeout(timeout time.Duration) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithContext(ctx context.Context) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithHTTPClient(client *http.Client) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEventID adds the eventID to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithEventID(eventID string) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetEventID(eventID)
	return o
}

// SetEventID adds the eventId to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetEventID(eventID string) {
	o.EventID = eventID
}

// WithIncidentID adds the incidentID to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithIncidentID(incidentID string) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithPatchV1IncidentsIncidentIDEventsEventIDVotes adds the patchV1IncidentsIncidentIDEventsEventIDVotes to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WithPatchV1IncidentsIncidentIDEventsEventIDVotes(patchV1IncidentsIncidentIDEventsEventIDVotes *models.PatchV1IncidentsIncidentIDEventsEventIDVotes) *PatchV1IncidentsIncidentIDEventsEventIDVotesParams {
	o.SetPatchV1IncidentsIncidentIDEventsEventIDVotes(patchV1IncidentsIncidentIDEventsEventIDVotes)
	return o
}

// SetPatchV1IncidentsIncidentIDEventsEventIDVotes adds the patchV1IncidentsIncidentIdEventsEventIdVotes to the patch v1 incidents incident Id events event Id votes params
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) SetPatchV1IncidentsIncidentIDEventsEventIDVotes(patchV1IncidentsIncidentIDEventsEventIDVotes *models.PatchV1IncidentsIncidentIDEventsEventIDVotes) {
	o.PatchV1IncidentsIncidentIDEventsEventIDVotes = patchV1IncidentsIncidentIDEventsEventIDVotes
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1IncidentsIncidentIDEventsEventIDVotesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param event_id
	if err := r.SetPathParam("event_id", o.EventID); err != nil {
		return err
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}
	if o.PatchV1IncidentsIncidentIDEventsEventIDVotes != nil {
		if err := r.SetBodyParam(o.PatchV1IncidentsIncidentIDEventsEventIDVotes); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
