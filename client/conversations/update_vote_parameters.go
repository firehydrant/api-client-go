// Code generated by go-swagger; DO NOT EDIT.

package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateVoteParams creates a new UpdateVoteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateVoteParams() *UpdateVoteParams {
	return &UpdateVoteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateVoteParamsWithTimeout creates a new UpdateVoteParams object
// with the ability to set a timeout on a request.
func NewUpdateVoteParamsWithTimeout(timeout time.Duration) *UpdateVoteParams {
	return &UpdateVoteParams{
		timeout: timeout,
	}
}

// NewUpdateVoteParamsWithContext creates a new UpdateVoteParams object
// with the ability to set a context for a request.
func NewUpdateVoteParamsWithContext(ctx context.Context) *UpdateVoteParams {
	return &UpdateVoteParams{
		Context: ctx,
	}
}

// NewUpdateVoteParamsWithHTTPClient creates a new UpdateVoteParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateVoteParamsWithHTTPClient(client *http.Client) *UpdateVoteParams {
	return &UpdateVoteParams{
		HTTPClient: client,
	}
}

/*
UpdateVoteParams contains all the parameters to send to the API endpoint

	for the update vote operation.

	Typically these are written to a http.Request.
*/
type UpdateVoteParams struct {

	// EventID.
	EventID string

	// IncidentID.
	IncidentID string

	// UpdateVote.
	UpdateVote *models.UpdateVote

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update vote params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVoteParams) WithDefaults() *UpdateVoteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update vote params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVoteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update vote params
func (o *UpdateVoteParams) WithTimeout(timeout time.Duration) *UpdateVoteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update vote params
func (o *UpdateVoteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update vote params
func (o *UpdateVoteParams) WithContext(ctx context.Context) *UpdateVoteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update vote params
func (o *UpdateVoteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update vote params
func (o *UpdateVoteParams) WithHTTPClient(client *http.Client) *UpdateVoteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update vote params
func (o *UpdateVoteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEventID adds the eventID to the update vote params
func (o *UpdateVoteParams) WithEventID(eventID string) *UpdateVoteParams {
	o.SetEventID(eventID)
	return o
}

// SetEventID adds the eventId to the update vote params
func (o *UpdateVoteParams) SetEventID(eventID string) {
	o.EventID = eventID
}

// WithIncidentID adds the incidentID to the update vote params
func (o *UpdateVoteParams) WithIncidentID(incidentID string) *UpdateVoteParams {
	o.SetIncidentID(incidentID)
	return o
}

// SetIncidentID adds the incidentId to the update vote params
func (o *UpdateVoteParams) SetIncidentID(incidentID string) {
	o.IncidentID = incidentID
}

// WithUpdateVote adds the updateVote to the update vote params
func (o *UpdateVoteParams) WithUpdateVote(updateVote *models.UpdateVote) *UpdateVoteParams {
	o.SetUpdateVote(updateVote)
	return o
}

// SetUpdateVote adds the updateVote to the update vote params
func (o *UpdateVoteParams) SetUpdateVote(updateVote *models.UpdateVote) {
	o.UpdateVote = updateVote
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateVoteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param event_id
	if err := r.SetPathParam("event_id", o.EventID); err != nil {
		return err
	}

	// path param incident_id
	if err := r.SetPathParam("incident_id", o.IncidentID); err != nil {
		return err
	}
	if o.UpdateVote != nil {
		if err := r.SetBodyParam(o.UpdateVote); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
