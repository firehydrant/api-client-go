// Code generated by go-swagger; DO NOT EDIT.

package status_pages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateNuncImageParams creates a new UpdateNuncImageParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateNuncImageParams() *UpdateNuncImageParams {
	return &UpdateNuncImageParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNuncImageParamsWithTimeout creates a new UpdateNuncImageParams object
// with the ability to set a timeout on a request.
func NewUpdateNuncImageParamsWithTimeout(timeout time.Duration) *UpdateNuncImageParams {
	return &UpdateNuncImageParams{
		timeout: timeout,
	}
}

// NewUpdateNuncImageParamsWithContext creates a new UpdateNuncImageParams object
// with the ability to set a context for a request.
func NewUpdateNuncImageParamsWithContext(ctx context.Context) *UpdateNuncImageParams {
	return &UpdateNuncImageParams{
		Context: ctx,
	}
}

// NewUpdateNuncImageParamsWithHTTPClient creates a new UpdateNuncImageParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateNuncImageParamsWithHTTPClient(client *http.Client) *UpdateNuncImageParams {
	return &UpdateNuncImageParams{
		HTTPClient: client,
	}
}

/*
UpdateNuncImageParams contains all the parameters to send to the API endpoint

	for the update nunc image operation.

	Typically these are written to a http.Request.
*/
type UpdateNuncImageParams struct {

	// File.
	File runtime.NamedReadCloser

	// NuncConnectionID.
	NuncConnectionID string

	// Type.
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update nunc image params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateNuncImageParams) WithDefaults() *UpdateNuncImageParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update nunc image params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateNuncImageParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update nunc image params
func (o *UpdateNuncImageParams) WithTimeout(timeout time.Duration) *UpdateNuncImageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update nunc image params
func (o *UpdateNuncImageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update nunc image params
func (o *UpdateNuncImageParams) WithContext(ctx context.Context) *UpdateNuncImageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update nunc image params
func (o *UpdateNuncImageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update nunc image params
func (o *UpdateNuncImageParams) WithHTTPClient(client *http.Client) *UpdateNuncImageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update nunc image params
func (o *UpdateNuncImageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the update nunc image params
func (o *UpdateNuncImageParams) WithFile(file runtime.NamedReadCloser) *UpdateNuncImageParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the update nunc image params
func (o *UpdateNuncImageParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithNuncConnectionID adds the nuncConnectionID to the update nunc image params
func (o *UpdateNuncImageParams) WithNuncConnectionID(nuncConnectionID string) *UpdateNuncImageParams {
	o.SetNuncConnectionID(nuncConnectionID)
	return o
}

// SetNuncConnectionID adds the nuncConnectionId to the update nunc image params
func (o *UpdateNuncImageParams) SetNuncConnectionID(nuncConnectionID string) {
	o.NuncConnectionID = nuncConnectionID
}

// WithType adds the typeVar to the update nunc image params
func (o *UpdateNuncImageParams) WithType(typeVar string) *UpdateNuncImageParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the update nunc image params
func (o *UpdateNuncImageParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNuncImageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.File != nil {

		if o.File != nil {
			// form file param file
			if err := r.SetFileParam("file", o.File); err != nil {
				return err
			}
		}
	}

	// path param nunc_connection_id
	if err := r.SetPathParam("nunc_connection_id", o.NuncConnectionID); err != nil {
		return err
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
