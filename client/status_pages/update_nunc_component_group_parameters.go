// Code generated by go-swagger; DO NOT EDIT.

package status_pages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewUpdateNuncComponentGroupParams creates a new UpdateNuncComponentGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateNuncComponentGroupParams() *UpdateNuncComponentGroupParams {
	return &UpdateNuncComponentGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNuncComponentGroupParamsWithTimeout creates a new UpdateNuncComponentGroupParams object
// with the ability to set a timeout on a request.
func NewUpdateNuncComponentGroupParamsWithTimeout(timeout time.Duration) *UpdateNuncComponentGroupParams {
	return &UpdateNuncComponentGroupParams{
		timeout: timeout,
	}
}

// NewUpdateNuncComponentGroupParamsWithContext creates a new UpdateNuncComponentGroupParams object
// with the ability to set a context for a request.
func NewUpdateNuncComponentGroupParamsWithContext(ctx context.Context) *UpdateNuncComponentGroupParams {
	return &UpdateNuncComponentGroupParams{
		Context: ctx,
	}
}

// NewUpdateNuncComponentGroupParamsWithHTTPClient creates a new UpdateNuncComponentGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateNuncComponentGroupParamsWithHTTPClient(client *http.Client) *UpdateNuncComponentGroupParams {
	return &UpdateNuncComponentGroupParams{
		HTTPClient: client,
	}
}

/*
UpdateNuncComponentGroupParams contains all the parameters to send to the API endpoint

	for the update nunc component group operation.

	Typically these are written to a http.Request.
*/
type UpdateNuncComponentGroupParams struct {

	// ComponentGroupID.
	ComponentGroupID *string

	// GroupID.
	GroupID string

	// Name.
	Name *string

	// NuncConnectionID.
	NuncConnectionID string

	// Position.
	//
	// Format: int32
	Position *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update nunc component group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateNuncComponentGroupParams) WithDefaults() *UpdateNuncComponentGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update nunc component group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateNuncComponentGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithTimeout(timeout time.Duration) *UpdateNuncComponentGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithContext(ctx context.Context) *UpdateNuncComponentGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithHTTPClient(client *http.Client) *UpdateNuncComponentGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComponentGroupID adds the componentGroupID to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithComponentGroupID(componentGroupID *string) *UpdateNuncComponentGroupParams {
	o.SetComponentGroupID(componentGroupID)
	return o
}

// SetComponentGroupID adds the componentGroupId to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetComponentGroupID(componentGroupID *string) {
	o.ComponentGroupID = componentGroupID
}

// WithGroupID adds the groupID to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithGroupID(groupID string) *UpdateNuncComponentGroupParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithName adds the name to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithName(name *string) *UpdateNuncComponentGroupParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetName(name *string) {
	o.Name = name
}

// WithNuncConnectionID adds the nuncConnectionID to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithNuncConnectionID(nuncConnectionID string) *UpdateNuncComponentGroupParams {
	o.SetNuncConnectionID(nuncConnectionID)
	return o
}

// SetNuncConnectionID adds the nuncConnectionId to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetNuncConnectionID(nuncConnectionID string) {
	o.NuncConnectionID = nuncConnectionID
}

// WithPosition adds the position to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) WithPosition(position *int32) *UpdateNuncComponentGroupParams {
	o.SetPosition(position)
	return o
}

// SetPosition adds the position to the update nunc component group params
func (o *UpdateNuncComponentGroupParams) SetPosition(position *int32) {
	o.Position = position
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNuncComponentGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ComponentGroupID != nil {

		// form param component_group_id
		var frComponentGroupID string
		if o.ComponentGroupID != nil {
			frComponentGroupID = *o.ComponentGroupID
		}
		fComponentGroupID := frComponentGroupID
		if fComponentGroupID != "" {
			if err := r.SetFormParam("component_group_id", fComponentGroupID); err != nil {
				return err
			}
		}
	}

	// path param group_id
	if err := r.SetPathParam("group_id", o.GroupID); err != nil {
		return err
	}

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}
	}

	// path param nunc_connection_id
	if err := r.SetPathParam("nunc_connection_id", o.NuncConnectionID); err != nil {
		return err
	}

	if o.Position != nil {

		// form param position
		var frPosition int32
		if o.Position != nil {
			frPosition = *o.Position
		}
		fPosition := swag.FormatInt32(frPosition)
		if fPosition != "" {
			if err := r.SetFormParam("position", fPosition); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
