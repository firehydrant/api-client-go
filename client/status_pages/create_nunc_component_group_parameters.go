// Code generated by go-swagger; DO NOT EDIT.

package status_pages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCreateNuncComponentGroupParams creates a new CreateNuncComponentGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateNuncComponentGroupParams() *CreateNuncComponentGroupParams {
	return &CreateNuncComponentGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateNuncComponentGroupParamsWithTimeout creates a new CreateNuncComponentGroupParams object
// with the ability to set a timeout on a request.
func NewCreateNuncComponentGroupParamsWithTimeout(timeout time.Duration) *CreateNuncComponentGroupParams {
	return &CreateNuncComponentGroupParams{
		timeout: timeout,
	}
}

// NewCreateNuncComponentGroupParamsWithContext creates a new CreateNuncComponentGroupParams object
// with the ability to set a context for a request.
func NewCreateNuncComponentGroupParamsWithContext(ctx context.Context) *CreateNuncComponentGroupParams {
	return &CreateNuncComponentGroupParams{
		Context: ctx,
	}
}

// NewCreateNuncComponentGroupParamsWithHTTPClient creates a new CreateNuncComponentGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateNuncComponentGroupParamsWithHTTPClient(client *http.Client) *CreateNuncComponentGroupParams {
	return &CreateNuncComponentGroupParams{
		HTTPClient: client,
	}
}

/*
CreateNuncComponentGroupParams contains all the parameters to send to the API endpoint

	for the create nunc component group operation.

	Typically these are written to a http.Request.
*/
type CreateNuncComponentGroupParams struct {

	// ComponentGroupID.
	ComponentGroupID *string

	// Name.
	Name string

	// NuncConnectionID.
	NuncConnectionID string

	// Position.
	//
	// Format: int32
	Position *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create nunc component group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateNuncComponentGroupParams) WithDefaults() *CreateNuncComponentGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create nunc component group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateNuncComponentGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithTimeout(timeout time.Duration) *CreateNuncComponentGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithContext(ctx context.Context) *CreateNuncComponentGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithHTTPClient(client *http.Client) *CreateNuncComponentGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithComponentGroupID adds the componentGroupID to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithComponentGroupID(componentGroupID *string) *CreateNuncComponentGroupParams {
	o.SetComponentGroupID(componentGroupID)
	return o
}

// SetComponentGroupID adds the componentGroupId to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetComponentGroupID(componentGroupID *string) {
	o.ComponentGroupID = componentGroupID
}

// WithName adds the name to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithName(name string) *CreateNuncComponentGroupParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetName(name string) {
	o.Name = name
}

// WithNuncConnectionID adds the nuncConnectionID to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithNuncConnectionID(nuncConnectionID string) *CreateNuncComponentGroupParams {
	o.SetNuncConnectionID(nuncConnectionID)
	return o
}

// SetNuncConnectionID adds the nuncConnectionId to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetNuncConnectionID(nuncConnectionID string) {
	o.NuncConnectionID = nuncConnectionID
}

// WithPosition adds the position to the create nunc component group params
func (o *CreateNuncComponentGroupParams) WithPosition(position *int32) *CreateNuncComponentGroupParams {
	o.SetPosition(position)
	return o
}

// SetPosition adds the position to the create nunc component group params
func (o *CreateNuncComponentGroupParams) SetPosition(position *int32) {
	o.Position = position
}

// WriteToRequest writes these params to a swagger request
func (o *CreateNuncComponentGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ComponentGroupID != nil {

		// form param component_group_id
		var frComponentGroupID string
		if o.ComponentGroupID != nil {
			frComponentGroupID = *o.ComponentGroupID
		}
		fComponentGroupID := frComponentGroupID
		if fComponentGroupID != "" {
			if err := r.SetFormParam("component_group_id", fComponentGroupID); err != nil {
				return err
			}
		}
	}

	// form param name
	frName := o.Name
	fName := frName
	if fName != "" {
		if err := r.SetFormParam("name", fName); err != nil {
			return err
		}
	}

	// path param nunc_connection_id
	if err := r.SetPathParam("nunc_connection_id", o.NuncConnectionID); err != nil {
		return err
	}

	if o.Position != nil {

		// form param position
		var frPosition int32
		if o.Position != nil {
			frPosition = *o.Position
		}
		fPosition := swag.FormatInt32(frPosition)
		if fPosition != "" {
			if err := r.SetFormParam("position", fPosition); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
