// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/client/account_settings"
	"github.com/firehydrant/api-client-go/client/alerts"
	"github.com/firehydrant/api-client-go/client/audiences"
	"github.com/firehydrant/api-client-go/client/catalog_entries"
	"github.com/firehydrant/api-client-go/client/changes"
	"github.com/firehydrant/api-client-go/client/communication"
	"github.com/firehydrant/api-client-go/client/conversations"
	"github.com/firehydrant/api-client-go/client/incident_settings"
	"github.com/firehydrant/api-client-go/client/incidents"
	"github.com/firehydrant/api-client-go/client/integrations"
	"github.com/firehydrant/api-client-go/client/reporting"
	"github.com/firehydrant/api-client-go/client/retrospectives"
	"github.com/firehydrant/api-client-go/client/runbooks"
	"github.com/firehydrant/api-client-go/client/s_c_i_m"
	"github.com/firehydrant/api-client-go/client/signals"
	"github.com/firehydrant/api-client-go/client/status_pages"
	"github.com/firehydrant/api-client-go/client/tasks"
	"github.com/firehydrant/api-client-go/client/teams"
	"github.com/firehydrant/api-client-go/client/ticketing"
	"github.com/firehydrant/api-client-go/client/users"
	"github.com/firehydrant/api-client-go/client/webhooks"
)

// Default fire hydrant API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.firehydrant.io"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new fire hydrant API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *FireHydrantAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new fire hydrant API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *FireHydrantAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new fire hydrant API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *FireHydrantAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(FireHydrantAPI)
	cli.Transport = transport
	cli.AccountSettings = account_settings.New(transport, formats)
	cli.Alerts = alerts.New(transport, formats)
	cli.Audiences = audiences.New(transport, formats)
	cli.CatalogEntries = catalog_entries.New(transport, formats)
	cli.Changes = changes.New(transport, formats)
	cli.Communication = communication.New(transport, formats)
	cli.Conversations = conversations.New(transport, formats)
	cli.IncidentSettings = incident_settings.New(transport, formats)
	cli.Incidents = incidents.New(transport, formats)
	cli.Integrations = integrations.New(transport, formats)
	cli.Reporting = reporting.New(transport, formats)
	cli.Retrospectives = retrospectives.New(transport, formats)
	cli.Runbooks = runbooks.New(transport, formats)
	cli.Scim = s_c_i_m.New(transport, formats)
	cli.Signals = signals.New(transport, formats)
	cli.StatusPages = status_pages.New(transport, formats)
	cli.Tasks = tasks.New(transport, formats)
	cli.Teams = teams.New(transport, formats)
	cli.Ticketing = ticketing.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.Webhooks = webhooks.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// FireHydrantAPI is a client for fire hydrant API
type FireHydrantAPI struct {
	AccountSettings account_settings.ClientService

	Alerts alerts.ClientService

	Audiences audiences.ClientService

	CatalogEntries catalog_entries.ClientService

	Changes changes.ClientService

	Communication communication.ClientService

	Conversations conversations.ClientService

	IncidentSettings incident_settings.ClientService

	Incidents incidents.ClientService

	Integrations integrations.ClientService

	Reporting reporting.ClientService

	Retrospectives retrospectives.ClientService

	Runbooks runbooks.ClientService

	Scim s_c_i_m.ClientService

	Signals signals.ClientService

	StatusPages status_pages.ClientService

	Tasks tasks.ClientService

	Teams teams.ClientService

	Ticketing ticketing.ClientService

	Users users.ClientService

	Webhooks webhooks.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *FireHydrantAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AccountSettings.SetTransport(transport)
	c.Alerts.SetTransport(transport)
	c.Audiences.SetTransport(transport)
	c.CatalogEntries.SetTransport(transport)
	c.Changes.SetTransport(transport)
	c.Communication.SetTransport(transport)
	c.Conversations.SetTransport(transport)
	c.IncidentSettings.SetTransport(transport)
	c.Incidents.SetTransport(transport)
	c.Integrations.SetTransport(transport)
	c.Reporting.SetTransport(transport)
	c.Retrospectives.SetTransport(transport)
	c.Runbooks.SetTransport(transport)
	c.Scim.SetTransport(transport)
	c.Signals.SetTransport(transport)
	c.StatusPages.SetTransport(transport)
	c.Tasks.SetTransport(transport)
	c.Teams.SetTransport(transport)
	c.Ticketing.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.Webhooks.SetTransport(transport)
}
