// Code generated by go-swagger; DO NOT EDIT.

package catalog_entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// UpdateServiceDependencyReader is a Reader for the UpdateServiceDependency structure.
type UpdateServiceDependencyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceDependencyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateServiceDependencyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateServiceDependencyOK creates a UpdateServiceDependencyOK with default headers values
func NewUpdateServiceDependencyOK() *UpdateServiceDependencyOK {
	return &UpdateServiceDependencyOK{}
}

/*
UpdateServiceDependencyOK describes a response with status code 200, with default header values.

Update the notes of the service dependency
*/
type UpdateServiceDependencyOK struct {
	Payload *models.ServiceDependencyEntity
}

// IsSuccess returns true when this update service dependency o k response has a 2xx status code
func (o *UpdateServiceDependencyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update service dependency o k response has a 3xx status code
func (o *UpdateServiceDependencyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update service dependency o k response has a 4xx status code
func (o *UpdateServiceDependencyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update service dependency o k response has a 5xx status code
func (o *UpdateServiceDependencyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update service dependency o k response a status code equal to that given
func (o *UpdateServiceDependencyOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateServiceDependencyOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/service_dependencies/{service_dependency_id}][%d] updateServiceDependencyOK  %+v", 200, o.Payload)
}

func (o *UpdateServiceDependencyOK) String() string {
	return fmt.Sprintf("[PATCH /v1/service_dependencies/{service_dependency_id}][%d] updateServiceDependencyOK  %+v", 200, o.Payload)
}

func (o *UpdateServiceDependencyOK) GetPayload() *models.ServiceDependencyEntity {
	return o.Payload
}

func (o *UpdateServiceDependencyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceDependencyEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
