// Code generated by go-swagger; DO NOT EDIT.

package catalog_entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetServiceDependenciesParams creates a new GetServiceDependenciesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetServiceDependenciesParams() *GetServiceDependenciesParams {
	return &GetServiceDependenciesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetServiceDependenciesParamsWithTimeout creates a new GetServiceDependenciesParams object
// with the ability to set a timeout on a request.
func NewGetServiceDependenciesParamsWithTimeout(timeout time.Duration) *GetServiceDependenciesParams {
	return &GetServiceDependenciesParams{
		timeout: timeout,
	}
}

// NewGetServiceDependenciesParamsWithContext creates a new GetServiceDependenciesParams object
// with the ability to set a context for a request.
func NewGetServiceDependenciesParamsWithContext(ctx context.Context) *GetServiceDependenciesParams {
	return &GetServiceDependenciesParams{
		Context: ctx,
	}
}

// NewGetServiceDependenciesParamsWithHTTPClient creates a new GetServiceDependenciesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetServiceDependenciesParamsWithHTTPClient(client *http.Client) *GetServiceDependenciesParams {
	return &GetServiceDependenciesParams{
		HTTPClient: client,
	}
}

/*
GetServiceDependenciesParams contains all the parameters to send to the API endpoint

	for the get service dependencies operation.

	Typically these are written to a http.Request.
*/
type GetServiceDependenciesParams struct {

	/* Flatten.

	   If true, returns all dependencies in one array. If false, splits dependencies into different arrays for child and parent dependencies
	*/
	Flatten *bool

	// ServiceID.
	ServiceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get service dependencies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceDependenciesParams) WithDefaults() *GetServiceDependenciesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get service dependencies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceDependenciesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get service dependencies params
func (o *GetServiceDependenciesParams) WithTimeout(timeout time.Duration) *GetServiceDependenciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get service dependencies params
func (o *GetServiceDependenciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get service dependencies params
func (o *GetServiceDependenciesParams) WithContext(ctx context.Context) *GetServiceDependenciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get service dependencies params
func (o *GetServiceDependenciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get service dependencies params
func (o *GetServiceDependenciesParams) WithHTTPClient(client *http.Client) *GetServiceDependenciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get service dependencies params
func (o *GetServiceDependenciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFlatten adds the flatten to the get service dependencies params
func (o *GetServiceDependenciesParams) WithFlatten(flatten *bool) *GetServiceDependenciesParams {
	o.SetFlatten(flatten)
	return o
}

// SetFlatten adds the flatten to the get service dependencies params
func (o *GetServiceDependenciesParams) SetFlatten(flatten *bool) {
	o.Flatten = flatten
}

// WithServiceID adds the serviceID to the get service dependencies params
func (o *GetServiceDependenciesParams) WithServiceID(serviceID string) *GetServiceDependenciesParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get service dependencies params
func (o *GetServiceDependenciesParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetServiceDependenciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Flatten != nil {

		// query param flatten
		var qrFlatten bool

		if o.Flatten != nil {
			qrFlatten = *o.Flatten
		}
		qFlatten := swag.FormatBool(qrFlatten)
		if qFlatten != "" {

			if err := r.SetQueryParam("flatten", qFlatten); err != nil {
				return err
			}
		}
	}

	// path param service_id
	if err := r.SetPathParam("service_id", o.ServiceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
