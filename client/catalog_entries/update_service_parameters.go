// Code generated by go-swagger; DO NOT EDIT.

package catalog_entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/firehydrant/api-client-go/models"
)

// NewUpdateServiceParams creates a new UpdateServiceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateServiceParams() *UpdateServiceParams {
	return &UpdateServiceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateServiceParamsWithTimeout creates a new UpdateServiceParams object
// with the ability to set a timeout on a request.
func NewUpdateServiceParamsWithTimeout(timeout time.Duration) *UpdateServiceParams {
	return &UpdateServiceParams{
		timeout: timeout,
	}
}

// NewUpdateServiceParamsWithContext creates a new UpdateServiceParams object
// with the ability to set a context for a request.
func NewUpdateServiceParamsWithContext(ctx context.Context) *UpdateServiceParams {
	return &UpdateServiceParams{
		Context: ctx,
	}
}

// NewUpdateServiceParamsWithHTTPClient creates a new UpdateServiceParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateServiceParamsWithHTTPClient(client *http.Client) *UpdateServiceParams {
	return &UpdateServiceParams{
		HTTPClient: client,
	}
}

/*
UpdateServiceParams contains all the parameters to send to the API endpoint

	for the update service operation.

	Typically these are written to a http.Request.
*/
type UpdateServiceParams struct {

	// ServiceID.
	ServiceID string

	// UpdateService.
	UpdateService *models.UpdateService

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update service params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateServiceParams) WithDefaults() *UpdateServiceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update service params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateServiceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update service params
func (o *UpdateServiceParams) WithTimeout(timeout time.Duration) *UpdateServiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update service params
func (o *UpdateServiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update service params
func (o *UpdateServiceParams) WithContext(ctx context.Context) *UpdateServiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update service params
func (o *UpdateServiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update service params
func (o *UpdateServiceParams) WithHTTPClient(client *http.Client) *UpdateServiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update service params
func (o *UpdateServiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServiceID adds the serviceID to the update service params
func (o *UpdateServiceParams) WithServiceID(serviceID string) *UpdateServiceParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the update service params
func (o *UpdateServiceParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WithUpdateService adds the updateService to the update service params
func (o *UpdateServiceParams) WithUpdateService(updateService *models.UpdateService) *UpdateServiceParams {
	o.SetUpdateService(updateService)
	return o
}

// SetUpdateService adds the updateService to the update service params
func (o *UpdateServiceParams) SetUpdateService(updateService *models.UpdateService) {
	o.UpdateService = updateService
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateServiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param service_id
	if err := r.SetPathParam("service_id", o.ServiceID); err != nil {
		return err
	}
	if o.UpdateService != nil {
		if err := r.SetBodyParam(o.UpdateService); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
